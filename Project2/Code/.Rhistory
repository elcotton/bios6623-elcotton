logit <- coeff[1] + vaSub$asa*coeff[2] + vaSub$bmiCalc*coeff[3] +  vaSub$proced*coeff[4]
#import the data
va <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Two/cleanedData.csv")
###Run the logistic model
#without albumin
model <- glm(death30~asa + bmiCalc + proced,family = binomial(link = "logit"),
data = va)
summary(model)
table(va$proced)
coeff <- model$coefficients
#Subset to complete cases with only the variables we care about
vaSub <- va[,c(2,3,4,5,10,11)]
vaSub <- vaSub[complete.cases(vaSub),]
#get only the 39 period people with complete cases
va39 <- vaSub[vaSub$sixmonth == 39,]
#the predicted death rate for each hospital based on the last six months
expProp <- aggregate(va39$propPred,list(va39$hospcode),mean)*100
####Initial Modeling###
#10/22/18
#Library
library(boot)
library(ggplot2)
#import the data
va <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Two/cleanedData.csv")
###Run the logistic model
#without albumin
model <- glm(death30~asa + bmiCalc + proced,family = binomial(link = "logit"),
data = va)
#with albumin
#I did not include ASA because everyone was 4 or 5
modelAlb <- glm(death30~bmiCalc + proced + albumin,family = binomial(link = "logit"),
data = va)
summary(model)
summary(modelAlb)
coeff <- model$coefficients
#Subset to complete cases with only the variables we care about
vaSub <- va[,c(2,3,4,5,10,11)]
vaSub <- vaSub[complete.cases(vaSub),]
#Find the predicted/expected proportions for every person with complete data
logit <- coeff[1] + vaSub$asa*coeff[2] + vaSub$bmiCalc*coeff[3] +  vaSub$proced*coeff[4]
vaSub$propPred <- inv.logit(logit)
#get only the 39 period people with complete cases
va39 <- vaSub[vaSub$sixmonth == 39,]
#the predicted death rate for each hospital based on the last six months
expProp <- aggregate(va39$propPred,list(va39$hospcode),mean)*100
#Save the bootstrap so I don't have to run it again
write.csv(boot.proportions,"C:/Repositories/bios6623-elcotton/Project2/Reports/proportions.csv")
#upload the bootstrap
boot.proportions <- read.csv("C:/Repositories/bios6623-elcotton/Project2/Reports/proportions.csv")
boot.proportions$X <- NULL
#Get the 2.5% and 97.5% percentiles
quantProp <- matrix(NA, nrow = 43, ncol = 1)
for(i in 1:43){
quantProp[i] <- paste("(", round(quantile(boot.proportions[,i], prob = c(0.025,0.975))[1],2), ",",
round(quantile(boot.proportions[,i], prob = c(0.025,0.975))[2],2), ")", sep = "")
}
#Save these percentiles and add them to table 2
expCI <- cbind(expProp, quantProp)
#Upload tableTwo made at the end of the cleaning/table code
tableTwo <- read.csv("C:/Repositories/bios6623-elcotton/Project2/Reports/tableTwo.csv")
View(tableTwo)
tableTwo$X <- NULL
#Add the expected death rate found above
tableTwo$ExpectedDR <- c(expProp$x[1:29], NA, expProp$x[30:43])
View(quantProp)
#add the CI
tableTwo$CI <- c(quantProp[1:29], NA, quantProp[30:43])
#add the observed/expected ratio
tableTwo$ObsoverExp <- tableTwo$Death.Rate/tableTwo$ExpectedDR
tableTwo$SuperDifferent[tableTwo$ObsoverExp > 1.2 | tableTwo$ObsoverExp < 0.8] <- 1
tableTwo$SuperDifferent[tableTwo$ObsoverExp > 1.2] <- 1
#add a column that says if that ratio is above 1.2 or below 0.8
tableTwo$SuperDifferent <- NULL
tableTwo$SuperDifferent[tableTwo$ObsoverExp > 1.2] <- 1
table(tableTwo$SuperDifferent)
tableTwo$SuperDifferent[is.na(tableTwo$ObsoverExp)] <- NA
tableTwo$SuperDifferent[tableTwo$ObsoverExp < 1.2] <- 0
table(tableTwo$SuperDifferent)
28+15
tableTwo$SuperDifferent[tableTwo$ObsoverExp >= 1.2] <- "Too High"
tableTwo$SuperDifferent[tableTwo$ObsoverExp < 1.2 & tableTwo$ObsoverExp > 0.8] <- "Very close"
tableTwo$SuperDifferent[tableTwo$ObsoverExp <= 0.8] <- "Too Low"
tableTwo$SuperDifferent[is.na(tableTwo$ObsoverExp)] <- NA
table(tableTwo$SuperDifferent)
#save final table
write.csv(tableTwoPlus, "C:/Repositories/bios6623-elcotton/Project2/Reports/tableTwoPlus.csv")
#save final table
write.csv(tableTwo, "C:/Repositories/bios6623-elcotton/Project2/Reports/tableTwoPlus.csv")
#plot the medians and CIs
ggplot(plot,aes(x=hosp,y=mid))+geom_point()+
geom_errorbar(aes(ymin=lower,ymax=upper,width=0.2)) +
theme_bw
ggplot(plot,aes(x=hosp,y=mid))+geom_point()+
geom_errorbar(aes(ymin=lower,ymax=upper,width=0.2)) +
theme_bw()
test <- apply(boot.proportions,2, FUN = quantile, probs = c(0.025,0.5,0.975))
plot <- data.frame(t(test))
names(plot) <- c('lower','mid','upper')
plot <- cbind(hosp=as.character(c(1:29,31:44)),plot)
plot$hosp <- factor(plot$hosp, levels=plot$hosp[order(plot$mid)])
plot
#plot the medians and CIs
ggplot(plot,aes(x=hosp,y=mid))+geom_point()+
geom_errorbar(aes(ymin=lower,ymax=upper,width=0.2)) +
theme_bw()
#plot the medians and CIs
ggplot(plot,aes(x=hosp,y=mid))+geom_point()+
geom_errorbar(aes(ymin=lower,ymax=upper,width=0.2)) +
theme_bw() +
scale_x_discrete(name = "Hospital")
#plot the medians and CIs
ggplot(plot,aes(x=hosp,y=mid))+geom_point()+
geom_errorbar(aes(ymin=lower,ymax=upper,width=0.2)) +
theme_bw() +
scale_x_discrete(name = "Hospital") +
scale_y_continuous(name = "Median Expected Death Rate")
ggplot(plot,aes(x=hosp,y=mid))+geom_point()+
geom_errorbar(aes(ymin=lower,ymax=upper,width=0.2)) +
theme_bw() +
scale_x_discrete(name = "Hospital") +
scale_y_continuous(name = "Median Expected Death Rate") +
labs(title = "Expected Death Rate by Hospital")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold"))
ggplot(tableTwo, aes(x = hosp, y = ObsoverExp)) + geom_point()+
theme_bw() +
scale_x_discrete(name = "Hospital") +
scale_y_continuous(name = "Actual/Expected") +
labs(title = "Ratio of Actual/Expected Death Rates by Hospital")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold"))
View(tableTwo)
ggplot(tableTwo, aes(x = Hospital, y = ObsoverExp)) + geom_point()+
theme_bw() +
scale_x_discrete(name = "Hospital") +
scale_y_continuous(name = "Actual/Expected") +
labs(title = "Ratio of Actual/Expected Death Rates by Hospital")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold"))
ggplot(tableTwo, aes(x = Hospital, y = ObsoverExp)) + geom_point()+
theme_bw() +
scale_y_continuous(name = "Actual/Expected") +
labs(title = "Ratio of Actual/Expected Death Rates by Hospital")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold"))
###plot the Obsoverexp by hospital
tableTwo$Hospital <- as.factor(tableTwo$Hospital)
ggplot(tableTwo, aes(x = Hospital, y = ObsoverExp)) + geom_point()+
theme_bw() +
scale_y_continuous(name = "Actual/Expected") +
labs(title = "Ratio of Actual/Expected Death Rates by Hospital")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold"))
tableTwo$Hospital <- as.factor(tableTwo$Hospital)
ggplot(tableTwo, aes(x = Hospital, y = ObsoverExp)) + geom_point()+
theme_bw() +
scale_x_discrete(name = "Hospital")
scale_y_continuous(name = "Actual/Expected") +
labs(title = "Ratio of Actual/Expected Death Rates by Hospital")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold"))
tableTwo$Hospital <- as.factor(tableTwo$Hospital)
ggplot(tableTwo, aes(x = Hospital, y = ObsoverExp)) + geom_point()+
theme_bw() +
scale_x_discrete(name = "Hospital")
scale_y_continuous(name = "Actual/Expected") +
labs(title = "Ratio of Actual/Expected Death Rates by Hospital")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold"))
tableTwo$Hospital <- as.factor(tableTwo$Hospital)
ggplot(tableTwo, aes(x = Hospital, y = ObsoverExp)) + geom_point()+
theme_bw() +
scale_x_discrete(name = "Hospital")
scale_y_continuous(name = "Actual over Expected Death Rate Ratio") +
labs(title = "Ratio of Actual over Expected Death Rates by Hospital")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold"))
tableTwo$Hospital <- as.factor(tableTwo$Hospital)
ggplot(tableTwo, aes(x = Hospital, y = ObsoverExp)) + geom_point()+
theme_bw() +
scale_x_discrete(name = "Hospital") +
scale_y_continuous(name = "Actual over Expected Death Rate Ratio") +
labs(title = "Ratio of Actual over Expected Death Rates by Hospital")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold"))
ggplot(tableTwo, aes(x = Hospital, y = ObsoverExp)) +
geom_point(size = 10, color = "green")+
theme_bw() +
scale_x_discrete(name = "Hospital") +
scale_y_continuous(name = "Actual over Expected Death Rate Ratio") +
labs(title = "Ratio of Actual over Expected Death Rates by Hospital")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold"))
ggplot(tableTwo, aes(x = Hospital, y = ObsoverExp)) +
geom_point(size = 2, color = "dodgerblue")+
theme_bw() +
scale_x_discrete(name = "Hospital") +
scale_y_continuous(name = "Actual over Expected Death Rate Ratio") +
labs(title = "Ratio of Actual over Expected Death Rates by Hospital")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold"))
ggplot(tableTwo, aes(x = Hospital, y = ObsoverExp)) +
geom_point(size = 3, color = "dodgerblue")+
theme_bw() +
scale_x_discrete(name = "Hospital") +
scale_y_continuous(name = "Actual over Expected Death Rate Ratio") +
labs(title = "Ratio of Actual over Expected Death Rates by Hospital")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold"))
library(dplyr)
library(haven)
#import the data
va <- read_sas("~/BIOS6623_AdvancedData/Project_Two/vadata1.sas7bdat")
###Clean the data
#Delete the proced = 2 people
va <- va[grep(2, va$proced, invert = TRUE),]
#fix the funny Weight values
va[va$hospcode >=1 & va$hospcode <=16 & va$sixmonth == 39,5] <- va[va$hospcode >=1 & va$hospcode <=16 & va$sixmonth == 39,5]*2.2
#Calculate the BMI by hand
va$bmiCalc <- va$weight/(va$height^2)*703
#Switch ASA to 0 (if 1,2,3) or 1 (if 4,5)
va$asa[va$asa == 1|va$asa == 2|va$asa == 3] <- 0
va$asa[va$asa == 4|va$asa == 5] <- 1
###Investigate the missing data
#Subset to those who don't have albumin
vaAMiss <- va[is.na(va$albumin),]
vaANotMiss <- va[is.na(va$albumin) == F,]
#Missing at random! Based on ASA score
###Add a column that is for current data and old data
va$Current <- NA
va$Current[va$sixmonth == 39] <- 1
va$Current[va$sixmonth != 39] <- 0
#Export the cleaned datafile
write.csv(va, "C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Two/cleanedData.csv")
###Prepare the data for table making
#Change NA to missing for table making
va$proced[is.na(va$proced)] <- "missing"
va$asa[which(is.na(va$asa) == TRUE)] <- "missing"
###Subset data into both datasets
vaCurr <- va[va$Current == 1,]
vaNotCurr <- va[va$Current == 0,]
###Make tableOne, 1 column for old and one for new
tableOne <- matrix(NA, ncol = 4, nrow = 14)
colnames(tableOne) <- c("Variable","All Months", "Current Month", "Past Months")
tableOne[,1] <- c("N", "Procedure", "Valve Surgery", "CABG Surgery", "Missing",
"ASA", "1", "2", "Missing", "Weight", "Height",
"BMI", "Albumin", "30 day mortality")
contFunc <- function(x){
return(paste(round(mean(x, na.rm = TRUE),2), "±", round(sd(x, na.rm = TRUE),2), "(Missing =", sum(is.na(x)), ")"))
}
tableOne[1,2] <- nrow(va)
tableOne[1,3] <- nrow(vaCurr)
tableOne[1,4] <- nrow(vaNotCurr)
tableOne[3:5,2] <- paste(round(prop.table(table(va$proced))[c(1,2,3)]*100,2), "(",table(va$proced)[c(1,2,3)],")")
tableOne[3:5,3] <- paste(round(prop.table(table(vaCurr$proced))[c(1,2,3)]*100,2), "(",table(vaCurr$proced)[c(1,2,3)],")")
tableOne[3:5,4] <- paste(round(prop.table(table(vaNotCurr$proced))[c(1,2,3)]*100,2), "(",table(vaNotCurr$proced)[c(1,2,3)],")")
tableOne[7:9,2] <- paste(round(prop.table(table(va$asa))[c(1,2,3)]*100,2), "(",table(va$asa)[c(1,2,3)],")")
tableOne[7:9,3] <- paste(round(prop.table(table(vaCurr$asa))[c(1,2,3)]*100,2), "(",table(vaCurr$asa)[c(1,2,3)],")")
tableOne[7:9,4] <- paste(round(prop.table(table(vaNotCurr$asa))[c(1,2,3)]*100,2), "(",table(vaNotCurr$asa)[c(1,2,3)],")")
tableOne[10,2] <- contFunc(va$weight)
tableOne[10,3] <- contFunc(vaCurr$weight)
tableOne[10,4] <- contFunc(vaNotCurr$weight)
tableOne[11,2] <- contFunc(va$height)
tableOne[11,3] <- contFunc(vaCurr$height)
tableOne[11,4] <- contFunc(vaNotCurr$height)
tableOne[12,2] <- contFunc(va$bmiCalc)
tableOne[12,3] <- contFunc(vaCurr$bmiCalc)
tableOne[12,4] <- contFunc(vaNotCurr$bmiCalc)
tableOne[13,2] <- contFunc(va$albumin)
tableOne[13,3] <- contFunc(vaCurr$albumin)
tableOne[13,4] <- contFunc(vaNotCurr$albumin)
tableOne[14,2] <- paste(round(prop.table(table(va$death30))[2]*100,2), "(",table(va$death30)[2],")")
tableOne[14,3] <- paste(round(prop.table(table(vaCurr$death30))[2]*100,2), "(",table(vaCurr$death30)[2],")")
tableOne[14,4] <- paste(round(prop.table(table(vaNotCurr$death30))[2]*100,2), "(",table(vaNotCurr$death30)[2],")")
#Save tableOne
write.csv(tableOne, "C:/Repositories/bios6623-elcotton/Project2/Reports/tableOne.csv")
View(tableOne)
library(boot)
library(ggplot2)
#import the data
va <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Two/cleanedData.csv")
###Run the logistic model
#without albumin
model <- glm(death30~asa + bmiCalc + proced,family = binomial(link = "logit"),
data = va)
#with albumin
#I did not include ASA because everyone was 4 or 5
modelAlb <- glm(death30~bmiCalc + proced + albumin,family = binomial(link = "logit"),
data = va)
summary(model)
summary(modelAlb)
coeff <- model$coefficients
#Subset to complete cases with only the variables we care about
vaSub <- va[,c(2,3,4,5,10,11)]
vaSub <- vaSub[complete.cases(vaSub),]
View(tableOne)
#Find the predicted/expected proportions for every person with complete data
logit <- coeff[1] + vaSub$asa*coeff[2] + vaSub$bmiCalc*coeff[3] +  vaSub$proced*coeff[4]
vaSub$propPred <- inv.logit(logit)
#get only the 39 period people with complete cases
va39 <- vaSub[vaSub$sixmonth == 39,]
16496/26518
View(tableOne)
tableOne <- matrix(NA, ncol = 4, nrow = 14)
colnames(tableOne) <- c("Variable","All Months", "Current Month", "Past Months")
tableOne[,1] <- c("N", "Procedure", "Valve Surgery", "CABG Surgery", "Missing",
"ASA", "0 (1,2,3)", "1 (4 or 5)", "Missing", "Weight", "Height",
"BMI", "Albumin", "30 day mortality")
contFunc <- function(x){
return(paste(round(mean(x, na.rm = TRUE),2), "±", round(sd(x, na.rm = TRUE),2), "(Missing =", sum(is.na(x)), ")"))
}
tableOne[1,2] <- nrow(va)
tableOne[1,3] <- nrow(vaCurr)
tableOne[1,4] <- nrow(vaNotCurr)
tableOne[3:5,2] <- paste(round(prop.table(table(va$proced))[c(1,2,3)]*100,2), "(",table(va$proced)[c(1,2,3)],")")
tableOne[3:5,3] <- paste(round(prop.table(table(vaCurr$proced))[c(1,2,3)]*100,2), "(",table(vaCurr$proced)[c(1,2,3)],")")
tableOne[3:5,4] <- paste(round(prop.table(table(vaNotCurr$proced))[c(1,2,3)]*100,2), "(",table(vaNotCurr$proced)[c(1,2,3)],")")
tableOne[7:9,2] <- paste(round(prop.table(table(va$asa))[c(1,2,3)]*100,2), "(",table(va$asa)[c(1,2,3)],")")
tableOne[7:9,3] <- paste(round(prop.table(table(vaCurr$asa))[c(1,2,3)]*100,2), "(",table(vaCurr$asa)[c(1,2,3)],")")
tableOne[7:9,4] <- paste(round(prop.table(table(vaNotCurr$asa))[c(1,2,3)]*100,2), "(",table(vaNotCurr$asa)[c(1,2,3)],")")
tableOne[10,2] <- contFunc(va$weight)
tableOne[10,3] <- contFunc(vaCurr$weight)
tableOne[10,4] <- contFunc(vaNotCurr$weight)
tableOne[11,2] <- contFunc(va$height)
tableOne[11,3] <- contFunc(vaCurr$height)
tableOne[11,4] <- contFunc(vaNotCurr$height)
tableOne[12,2] <- contFunc(va$bmiCalc)
tableOne[12,3] <- contFunc(vaCurr$bmiCalc)
tableOne[12,4] <- contFunc(vaNotCurr$bmiCalc)
tableOne[13,2] <- contFunc(va$albumin)
tableOne[13,3] <- contFunc(vaCurr$albumin)
tableOne[13,4] <- contFunc(vaNotCurr$albumin)
tableOne[14,2] <- paste(round(prop.table(table(va$death30))[2]*100,2), "(",table(va$death30)[2],")")
tableOne[14,3] <- paste(round(prop.table(table(vaCurr$death30))[2]*100,2), "(",table(vaCurr$death30)[2],")")
tableOne[14,4] <- paste(round(prop.table(table(vaNotCurr$death30))[2]*100,2), "(",table(vaNotCurr$death30)[2],")")
#Save tableOne
write.csv(tableOne, "C:/Repositories/bios6623-elcotton/Project2/Reports/tableOne.csv")
prop.table(table(va$proced))
prop.table(table(vaCurr$proced))
va <- read_sas("~/BIOS6623_AdvancedData/Project_Two/vadata1.sas7bdat")
###Clean the data
#Delete the proced = 2 people
va <- va[grep(2, va$proced, invert = TRUE),]
#fix the funny Weight values
va[va$hospcode >=1 & va$hospcode <=16 & va$sixmonth == 39,5] <- va[va$hospcode >=1 & va$hospcode <=16 & va$sixmonth == 39,5]*2.2
#Calculate the BMI by hand
va$bmiCalc <- va$weight/(va$height^2)*703
#Switch ASA to 0 (if 1,2,3) or 1 (if 4,5)
va$asa[va$asa == 1|va$asa == 2|va$asa == 3] <- 0
va$asa[va$asa == 4|va$asa == 5] <- 1
###Investigate the missing data
#Subset to those who don't have albumin
vaAMiss <- va[is.na(va$albumin),]
vaANotMiss <- va[is.na(va$albumin) == F,]
#Missing at random! Based on ASA score
###Add a column that is for current data and old data
va$Current <- NA
va$Current[va$sixmonth == 39] <- 1
va$Current[va$sixmonth != 39] <- 0
#Export the cleaned datafile
write.csv(va, "C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Two/cleanedData.csv")
###Prepare the data for table making
#Change NA to missing for table making
va$proced[is.na(va$proced)] <- "missing"
va$asa[which(is.na(va$asa) == TRUE)] <- "missing"
###Subset data into both datasets
vaCurr <- va[va$Current == 1,]
vaNotCurr <- va[va$Current == 0,]
###Make tableOne, 1 column for old and one for new
tableOne <- matrix(NA, ncol = 4, nrow = 14)
colnames(tableOne) <- c("Variable","All Months", "Current Month", "Past Months")
tableOne[,1] <- c("N", "Procedure", "Valve Surgery", "CABG Surgery", "Missing",
"ASA", "0 (1,2,3)", "1 (4 or 5)", "Missing", "Weight", "Height",
"BMI", "Albumin", "30 day mortality")
contFunc <- function(x){
return(paste(round(mean(x, na.rm = TRUE),2), "±", round(sd(x, na.rm = TRUE),2), "(Missing =", sum(is.na(x)), ")"))
}
tableOne[1,2] <- nrow(va)
tableOne[1,3] <- nrow(vaCurr)
tableOne[1,4] <- nrow(vaNotCurr)
tableOne[3:5,2] <- paste(round(prop.table(table(va$proced))[c(1,2,3)]*100,2), "(",table(va$proced)[c(1,2,3)],")")
tableOne[3:5,3] <- paste(round(prop.table(table(vaCurr$proced))[c(1,2,3)]*100,2), "(",table(vaCurr$proced)[c(1,2,3)],")")
tableOne[3:5,4] <- paste(round(prop.table(table(vaNotCurr$proced))[c(1,2,3)]*100,2), "(",table(vaNotCurr$proced)[c(1,2,3)],")")
tableOne[7:9,2] <- paste(round(prop.table(table(va$asa))[c(1,2,3)]*100,2), "(",table(va$asa)[c(1,2,3)],")")
tableOne[7:9,3] <- paste(round(prop.table(table(vaCurr$asa))[c(1,2,3)]*100,2), "(",table(vaCurr$asa)[c(1,2,3)],")")
tableOne[7:9,4] <- paste(round(prop.table(table(vaNotCurr$asa))[c(1,2,3)]*100,2), "(",table(vaNotCurr$asa)[c(1,2,3)],")")
tableOne[10,2] <- contFunc(va$weight)
tableOne[10,3] <- contFunc(vaCurr$weight)
tableOne[10,4] <- contFunc(vaNotCurr$weight)
tableOne[11,2] <- contFunc(va$height)
tableOne[11,3] <- contFunc(vaCurr$height)
tableOne[11,4] <- contFunc(vaNotCurr$height)
tableOne[12,2] <- contFunc(va$bmiCalc)
tableOne[12,3] <- contFunc(vaCurr$bmiCalc)
tableOne[12,4] <- contFunc(vaNotCurr$bmiCalc)
tableOne[13,2] <- contFunc(va$albumin)
tableOne[13,3] <- contFunc(vaCurr$albumin)
tableOne[13,4] <- contFunc(vaNotCurr$albumin)
tableOne[14,2] <- paste(round(prop.table(table(va$death30))[2]*100,2), "(",table(va$death30)[2],")")
tableOne[14,3] <- paste(round(prop.table(table(vaCurr$death30))[2]*100,2), "(",table(vaCurr$death30)[2],")")
tableOne[14,4] <- paste(round(prop.table(table(vaNotCurr$death30))[2]*100,2), "(",table(vaNotCurr$death30)[2],")")
#Save tableOne
write.csv(tableOne, "C:/Repositories/bios6623-elcotton/Project2/Reports/tableOne.csv")
View(tableOne)
4884+20123
4884+20126
25010+1508
792+3380+252
4092+16746+1256
792+4092
3380+16746
252+1256
1009+4941
3079+15329
336+1824
library(boot)
library(ggplot2)
#import the data
va <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Two/cleanedData.csv")
###Run the logistic model
#without albumin
model <- glm(death30~asa + bmiCalc + proced,family = binomial(link = "logit"),
data = va)
#with albumin
#I did not include ASA because everyone was 4 or 5
modelAlb <- glm(death30~bmiCalc + proced + albumin,family = binomial(link = "logit"),
data = va)
summary(model)
summary(modelAlb)
coeff <- model$coefficients
#Subset to complete cases with only the variables we care about
vaSub <- va[,c(2,3,4,5,10,11)]
vaSub <- vaSub[complete.cases(vaSub),]
#Find the predicted/expected proportions for every person with complete data
logit <- coeff[1] + vaSub$asa*coeff[2] + vaSub$bmiCalc*coeff[3] +  vaSub$proced*coeff[4]
vaSub$propPred <- inv.logit(logit)
#get only the 39 period people with complete cases
va39 <- vaSub[vaSub$sixmonth == 39,]
#the predicted death rate for each hospital based on the last six months
expProp <- aggregate(va39$propPred,list(va39$hospcode),mean)*100
#upload the bootstrap
boot.proportions <- read.csv("C:/Repositories/bios6623-elcotton/Project2/Reports/proportions.csv")
boot.proportions$X <- NULL
#Get the 2.5% and 97.5% percentiles
quantProp <- matrix(NA, nrow = 43, ncol = 1)
for(i in 1:43){
quantProp[i] <- paste("(", round(quantile(boot.proportions[,i], prob = c(0.025,0.975))[1],2), ",",
round(quantile(boot.proportions[,i], prob = c(0.025,0.975))[2],2), ")", sep = "")
}
#Save these percentiles and add them to table 2
expCI <- cbind(expProp, quantProp)
tableTwo <- read.csv("C:/Repositories/bios6623-elcotton/Project2/Reports/tableTwo.csv")
tableTwo$X <- NULL
#Add the expected death rate found above
tableTwo$ExpectedDR <- c(expProp$x[1:29], NA, expProp$x[30:43])
#add the CI
tableTwo$CI <- c(quantProp[1:29], NA, quantProp[30:43])
#add the observed/expected ratio
tableTwo$ObsoverExp <- tableTwo$Death.Rate/tableTwo$ExpectedDR
#add a column that says if that ratio is above 1.2 or below 0.8
tableTwo$SuperDifferent <- NULL
tableTwo$SuperDifferent[tableTwo$ObsoverExp >= 1.2] <- "High"
tableTwo$SuperDifferent[tableTwo$ObsoverExp < 1.2 & tableTwo$ObsoverExp > 0.8] <- "Very close"
tableTwo$SuperDifferent[tableTwo$ObsoverExp <= 0.8] <- "Low"
tableTwo$SuperDifferent[is.na(tableTwo$ObsoverExp)] <- NA
#save final table
write.csv(tableTwo, "C:/Repositories/bios6623-elcotton/Project2/Reports/tableTwoPlus.csv")
tableTwo <- read.csv("C:/Repositories/bios6623-elcotton/Project2/Reports/tableTwo.csv")
tableTwo$X <- NULL
#Add the expected death rate found above
tableTwo$ExpectedDR <- c(expProp$x[1:29], NA, expProp$x[30:43])
#add the CI
tableTwo$CI <- c(quantProp[1:29], NA, quantProp[30:43])
#add the observed/expected ratio
tableTwo$ObsoverExp <- tableTwo$Death.Rate/tableTwo$ExpectedDR
#add a column that says if that ratio is above 1.2 or below 0.8
tableTwo$SuperDifferent <- NULL
tableTwo$SuperDifferent[tableTwo$ObsoverExp >= 1.2] <- "High"
tableTwo$SuperDifferent[tableTwo$ObsoverExp < 1.2 & tableTwo$ObsoverExp > 0.8] <- "Very close"
tableTwo$SuperDifferent[tableTwo$ObsoverExp <= 0.8] <- "Low"
tableTwo$SuperDifferent[is.na(tableTwo$ObsoverExp)] <- NA
#save final table
write.csv(tableTwo, "C:/Repositories/bios6623-elcotton/Project2/Reports/tableTwoPlus.csv")
tableTwo <- read.csv("C:/Repositories/bios6623-elcotton/Project2/Reports/tableTwo.csv")
tableTwo$X <- NULL
#Add the expected death rate found above
tableTwo$ExpectedDR <- round(c(expProp$x[1:29], NA, expProp$x[30:43]),2)
#add the CI
tableTwo$CI <- c(quantProp[1:29], NA, quantProp[30:43])
#add the observed/expected ratio
tableTwo$ObsoverExp <- round(tableTwo$Death.Rate/tableTwo$ExpectedDR,2)
#add a column that says if that ratio is above 1.2 or below 0.8
tableTwo$SuperDifferent <- NULL
tableTwo$SuperDifferent[tableTwo$ObsoverExp >= 1.2] <- "High"
tableTwo$SuperDifferent[tableTwo$ObsoverExp < 1.2 & tableTwo$ObsoverExp > 0.8] <- "Very close"
tableTwo$SuperDifferent[tableTwo$ObsoverExp <= 0.8] <- "Low"
tableTwo$SuperDifferent[is.na(tableTwo$ObsoverExp)] <- NA
#save final table
write.csv(tableTwo, "C:/Repositories/bios6623-elcotton/Project2/Reports/tableTwoPlus.csv")
View(tableTwo)
