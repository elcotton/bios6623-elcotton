colnames(tableTwo) <- c("Hospital", "Number Died", "Number Seen", "Death Rate")
tableTwo[,1] <- seq(1,44, by =1)
tableTwo[,2] <- table(vaCurr$hospcode,vaCurr$death30)[,2]
tableTwo[,3] <- table(vaCurr$hospcode)
tableTwo[,4] <- round(table(vaCurr$hospcode,vaCurr$death30)[,2]/table(vaCurr$hospcode)*100, 2)
#Save tableOne
write.csv(tableTwo, "C:/Repositories/bios6623-elcotton/Project2/Reports/tableTwo.csv")
###Run the logistic model
#without albumin
model <- glm(death30~asa + bmi + proced,family = binomial(link = "logit"),
data = va)
summary(model)
library(haven)
#import the data
va <- read_sas("~/BIOS6623_AdvancedData/Project_Two/vadata1.sas7bdat")
###Clean the data
#Delete the proced = 2 people
va <- va[grep(2, va$proced, invert = TRUE),]
#fix the funny Weight values
va[va$hospcode >=1 & va$hospcode <=16 & va$sixmonth == 39,5] <- va[va$hospcode >=1 & va$hospcode <=16 & va$sixmonth == 39,5]*2.2
#Calculate the BMI by hand
va$bmiCalc <- va$weight/(va$height^2)*703
#Switch ASA to 0 (if 1,2,3) or 1 (if 4,5)
va$asa[va$asa == 1|va$asa == 2|va$asa == 3] <- 0
va$asa[va$asa == 4|va$asa == 5] <- 1
###Investigate the missing data
#Subset to those who don't have albumin
vaAMiss <- va[is.na(va$albumin),]
vaANotMiss <- va[is.na(va$albumin) == F,]
#Missing at random! Based on ASA score
###Add a column that is for current data and old data
va$Current <- NA
va$Current[va$sixmonth == 39] <- 1
va$Current[va$sixmonth != 39] <- 0
#Export the file
write.csv(va, "C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Two/cleanedData.csv")
#import the data
va <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Two/cleanedData.csv")
###Run the logistic model
#without albumin
model <- glm(death30~asa + bmi + proced,family = binomial(link = "logit"),
data = va)
summary(model)
View(va)
colnames(va)
#Subset to complete values
vaSub <- va[,c(2,3,4,5,10,11)]
vaSub <- vaSub[complete.cases(vaSub),]
logit <- coeff[1] + vaSub$asa*coeff[2] + vaSub$bmiCalc*coeff[3] +  vaSub$proced*coeff[4]
coeff <- model$coefficients
logit <- coeff[1] + vaSub$asa*coeff[2] + vaSub$bmiCalc*coeff[3] +  vaSub$proced*coeff[4]
vaSub$propPred <- inv.logit(logit)
#Library
library(boot)
vaSub$propPred <- inv.logit(logit)
View(vaSub)
#get only the 39 period people
va39 <- vaSub[vaSub$sixmonth == 39,]
View(va39)
aggregate(va39$propPred,list(va39$hospcode),mean)*100
for(i in 1:10){
#sample new data
boot.vec <- sample(nrow(vaSub), replace = T)
boot.sp <- vaSub[boot.vec,]
#run the logistic regression
model <- glm(death30~asa + bmi + proced,family = binomial(link = "logit"),
data = boot.sp)
coeff <- model$coefficients
#get the fitted values
logit <- coeff[1] + vaSub$asa*coeff[2] + vaSub$bmi*coeff[3] +  vaSub$proced*coeff[4]
boot.sp$proportions <- inv.logit(logit)
#save aggregated values for each hospital in boot proportions
boot.sp39 <- boot.sp[vaSub$sixmonth == 39,]
boot.proportions[i,] <- aggregate(boot.sp39$proportions,list(boot.sp39$hospcode),mean)[,2]*100
print(i)
}
for(i in 1:10){
#sample new data
boot.vec <- sample(nrow(vaSub), replace = T)
boot.sp <- vaSub[boot.vec,]
#run the logistic regression
model <- glm(death30~asa + bmi + proced,family = binomial(link = "logit"),
data = boot.sp)
coeff <- model$coefficients
#get the fitted values
logit <- coeff[1] + vaSub$asa*coeff[2] + vaSub$bmiCalc*coeff[3] +  vaSub$proced*coeff[4]
boot.sp$proportions <- inv.logit(logit)
#save aggregated values for each hospital in boot proportions
boot.sp39 <- boot.sp[vaSub$sixmonth == 39,]
boot.proportions[i,] <- aggregate(boot.sp39$proportions,list(boot.sp39$hospcode),mean)[,2]*100
print(i)
}
for(i in 1:10){
#sample new data
boot.vec <- sample(nrow(vaSub), replace = T)
boot.sp <- vaSub[boot.vec,]
#run the logistic regression
model <- glm(death30~asa + bmiCalc + proced,family = binomial(link = "logit"),
data = boot.sp)
coeff <- model$coefficients
#get the fitted values
logit <- coeff[1] + vaSub$asa*coeff[2] + vaSub$bmiCalc*coeff[3] +  vaSub$proced*coeff[4]
boot.sp$proportions <- inv.logit(logit)
#save aggregated values for each hospital in boot proportions
boot.sp39 <- boot.sp[vaSub$sixmonth == 39,]
boot.proportions[i,] <- aggregate(boot.sp39$proportions,list(boot.sp39$hospcode),mean)[,2]*100
print(i)
}
###Do the bootstrapping
#create empty vector to fill with proportions
boot.proportions<-matrix(NA, nrow = 10000, ncol = 44)
###FIX AND ONLY GET PREDICTION ON 39
for(i in 1:10){
#sample new data
boot.vec <- sample(nrow(vaSub), replace = T)
boot.sp <- vaSub[boot.vec,]
#run the logistic regression
model <- glm(death30~asa + bmiCalc + proced,family = binomial(link = "logit"),
data = boot.sp)
coeff <- model$coefficients
#get the fitted values
logit <- coeff[1] + vaSub$asa*coeff[2] + vaSub$bmiCalc*coeff[3] +  vaSub$proced*coeff[4]
boot.sp$proportions <- inv.logit(logit)
#save aggregated values for each hospital in boot proportions
boot.sp39 <- boot.sp[vaSub$sixmonth == 39,]
boot.proportions[i,] <- aggregate(boot.sp39$proportions,list(boot.sp39$hospcode),mean)[,2]*100
print(i)
}
View(boot.proportions)
for(i in 1:10000){
#sample new data
boot.vec <- sample(nrow(vaSub), replace = T)
boot.sp <- vaSub[boot.vec,]
#run the logistic regression
model <- glm(death30~asa + bmiCalc + proced,family = binomial(link = "logit"),
data = boot.sp)
coeff <- model$coefficients
#get the fitted values
logit <- coeff[1] + vaSub$asa*coeff[2] + vaSub$bmiCalc*coeff[3] +  vaSub$proced*coeff[4]
boot.sp$proportions <- inv.logit(logit)
#save aggregated values for each hospital in boot proportions
boot.sp39 <- boot.sp[vaSub$sixmonth == 39,]
boot.proportions[i,] <- aggregate(boot.sp39$proportions,list(boot.sp39$hospcode),mean)[,2]*100
print(i)
}
View(boot.proportions)
#Save the bootstrap so I don't have to run it again
write.csv(boot.proportions,"C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Two/proportions.csv")
?quartiles
?quantiles
?quantile
quantile(boot.proportions[,1], prob = c(0.025,0.975))
quantProp <- matrix(NA, nrow = 44, ncol = 2)
quantProp <- matrix(NA, nrow = 44, ncol = 2)
for(i in 1:44){
quantProp[i,] <- quantile(boot.proportions[,i], prob = c(0.025,0.975))
}
View(quantProp)
#Save these percentiles and add them to table 2
write.csv(quantProp, "C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Two/quantiles.csv")
#Save these percentiles and add them to table 2
write.csv(quantProp, "C:/Repositories/bios6623-elcotton/Project2/Reports/quantiles.csv")
#Get the 2.5% and 97.5% percentiles
quantProp <- matrix(NA, nrow = 44, ncol = 1)
quantile(boot.proportions[,1], prob = c(0.025,0.975))[1]
quantProp <- matrix(NA, nrow = 44, ncol = 1)
for(i in 1:44){
quantProp[i] <- paste("(", round(quantile(boot.proportions[,i], prob = c(0.025,0.975))[1]*100,2), ",",
round(quantile(boot.proportions[,i], prob = c(0.025,0.975))[2]*100,2), ")")
}
View(quantProp)
quantProp <- matrix(NA, nrow = 44, ncol = 1)
for(i in 1:44){
quantProp[i] <- paste("(", round(quantile(boot.proportions[,i], prob = c(0.025,0.975))[1],2), ",",
round(quantile(boot.proportions[,i], prob = c(0.025,0.975))[2],2), ")")
}
View(quantProp)
quantProp <- matrix(NA, nrow = 44, ncol = 1)
for(i in 1:44){
quantProp[i] <- paste("(", round(quantile(boot.proportions[,i], prob = c(0.025,0.975))[1],2), ",",
round(quantile(boot.proportions[,i], prob = c(0.025,0.975))[2],2), ")", sep = "")
}
View(quantProp)
#Save these percentiles and add them to table 2
write.csv(quantProp, "C:/Repositories/bios6623-elcotton/Project2/Reports/quantiles.csv")
#Save the bootstrap so I don't have to run it again
write.csv(boot.proportions,"C:/Repositories/bios6623-elcotton/Project2/Reports/proportions.csv")
aggregate(va39$propPred,list(va39$hospcode),mean)*100
#the predicted death rate for each hospital!
expProp <- aggregate(va39$propPred,list(va39$hospcode),mean)*100
#Save these percentiles and add them to table 2
test <- cbind(expProp, quantProp)
View(va39)
View(va)
table(va$hospcode)
table(vaSub$hospcode)
tester <- vaSub[vaSub$hospcode == 30,]
table(tester$sixmonth)
test <- va[va$hospcode == 30,]
table(test$sixmonth)
test <- va[va$hospcode == 30 & va$sixmonth == 39,]
View(test)
#sample new data
boot.vec <- sample(nrow(vaSub), replace = T)
boot.sp <- vaSub[boot.vec,]
#run the logistic regression
model <- glm(death30~asa + bmiCalc + proced,family = binomial(link = "logit"),
data = boot.sp)
coeff <- model$coefficients
#get the fitted values
logit <- coeff[1] + vaSub$asa*coeff[2] + vaSub$bmiCalc*coeff[3] +  vaSub$proced*coeff[4]
boot.sp$proportions <- inv.logit(logit)
#save aggregated values for each hospital in boot proportions
boot.sp39 <- boot.sp[vaSub$sixmonth == 39,]
table(boot.sp39$hospcode)
View(boot.sp)
poop <- boot.sp[boot.sp$sixmonth == 39,]
table(poop$hospcode)
#Library
library(boot)
#import the data
va <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Two/cleanedData.csv")
###Run the logistic model
#without albumin
model <- glm(death30~asa + bmiCalc + proced,family = binomial(link = "logit"),
data = va)
#with albumin
modelAlb <- glm(death30~asa + bmiCalc + proced + albumin,family = binomial(link = "logit"),
data = va)
summary(model)
summary(modelAlb)
coeff <- model$coefficients
#Subset to complete values
vaSub <- va[,c(2,3,4,5,10,11)]
vaSub <- vaSub[complete.cases(vaSub),]
#Find the predicted proportions for every person
logit <- coeff[1] + vaSub$asa*coeff[2] + vaSub$bmiCalc*coeff[3] +  vaSub$proced*coeff[4]
vaSub$propPred <- inv.logit(logit)
#get only the 39 period people
va39 <- vaSub[vaSub$sixmonth == 39,]
#the predicted death rate for each hospital!
expProp <- aggregate(va39$propPred,list(va39$hospcode),mean)*100
###Do the bootstrapping
#create empty vector to fill with proportions
boot.proportions<-matrix(NA, nrow = 10000, ncol = 44)
for(i in 1:10000){
#sample new data
boot.vec <- sample(nrow(vaSub), replace = T)
boot.sp <- vaSub[boot.vec,]
#run the logistic regression
model <- glm(death30~asa + bmiCalc + proced,family = binomial(link = "logit"),
data = boot.sp)
coeff <- model$coefficients
#get the fitted values
logit <- coeff[1] + vaSub$asa*coeff[2] + vaSub$bmiCalc*coeff[3] +  vaSub$proced*coeff[4]
boot.sp$proportions <- inv.logit(logit)
#save aggregated values for each hospital in boot proportions
boot.sp39 <- boot.sp[boot.sp$sixmonth == 39,]
boot.proportions[i,] <- aggregate(boot.sp39$proportions,list(boot.sp39$hospcode),mean)[,2]*100
print(i)
}
boot.proportions<-matrix(NA, nrow = 10000, ncol = 43)
for(i in 1:10000){
#sample new data
boot.vec <- sample(nrow(vaSub), replace = T)
boot.sp <- vaSub[boot.vec,]
#run the logistic regression
model <- glm(death30~asa + bmiCalc + proced,family = binomial(link = "logit"),
data = boot.sp)
coeff <- model$coefficients
#get the fitted values
logit <- coeff[1] + vaSub$asa*coeff[2] + vaSub$bmiCalc*coeff[3] +  vaSub$proced*coeff[4]
boot.sp$proportions <- inv.logit(logit)
#save aggregated values for each hospital in boot proportions
boot.sp39 <- boot.sp[boot.sp$sixmonth == 39,]
boot.proportions[i,] <- aggregate(boot.sp39$proportions,list(boot.sp39$hospcode),mean)[,2]*100
print(i)
}
View(boot.proportions)
#Save the bootstrap so I don't have to run it again
write.csv(boot.proportions,"C:/Repositories/bios6623-elcotton/Project2/Reports/proportions.csv")
#Get the 2.5% and 97.5% percentiles
quantProp <- matrix(NA, nrow = 44, ncol = 1)
for(i in 1:44){
quantProp[i] <- paste("(", round(quantile(boot.proportions[,i], prob = c(0.025,0.975))[1],2), ",",
round(quantile(boot.proportions[,i], prob = c(0.025,0.975))[2],2), ")", sep = "")
}
#Get the 2.5% and 97.5% percentiles
quantProp <- matrix(NA, nrow = 43, ncol = 1)
for(i in 1:44){
quantProp[i] <- paste("(", round(quantile(boot.proportions[,i], prob = c(0.025,0.975))[1],2), ",",
round(quantile(boot.proportions[,i], prob = c(0.025,0.975))[2],2), ")", sep = "")
}
quantProp <- matrix(NA, nrow = 43, ncol = 1)
for(i in 1:43){
quantProp[i] <- paste("(", round(quantile(boot.proportions[,i], prob = c(0.025,0.975))[1],2), ",",
round(quantile(boot.proportions[,i], prob = c(0.025,0.975))[2],2), ")", sep = "")
}
#Save these percentiles and add them to table 2
test <- cbind(expProp, quantProp)
write.csv(quantProp, "C:/Repositories/bios6623-elcotton/Project2/Reports/quantiles.csv")
View(test)
prop <- read.csv("C:/Repositories/bios6623-elcotton/Project2/Reports/proportions.csv")
boot.proprotions <- read.csv("C:/Repositories/bios6623-elcotton/Project2/Reports/proportions.csv")
#Get the 2.5% and 97.5% percentiles
quantProp <- matrix(NA, nrow = 43, ncol = 1)
for(i in 1:43){
quantProp[i] <- paste("(", round(quantile(boot.proportions[,i], prob = c(0.025,0.975))[1],2), ",",
round(quantile(boot.proportions[,i], prob = c(0.025,0.975))[2],2), ")", sep = "")
}
boot.proportions <- read.csv("C:/Repositories/bios6623-elcotton/Project2/Reports/proportions.csv")
#Get the 2.5% and 97.5% percentiles
quantProp <- matrix(NA, nrow = 43, ncol = 1)
for(i in 1:43){
quantProp[i] <- paste("(", round(quantile(boot.proportions[,i], prob = c(0.025,0.975))[1],2), ",",
round(quantile(boot.proportions[,i], prob = c(0.025,0.975))[2],2), ")", sep = "")
}
#Save these percentiles and add them to table 2
test <- cbind(expProp, quantProp)
va <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Two/cleanedData.csv")
###Run the logistic model
#without albumin
model <- glm(death30~asa + bmiCalc + proced,family = binomial(link = "logit"),
data = va)
#with albumin
modelAlb <- glm(death30~asa + bmiCalc + proced + albumin,family = binomial(link = "logit"),
data = va)
summary(model)
summary(modelAlb)
coeff <- model$coefficients
#Subset to complete cases with only the variables we care about
vaSub <- va[,c(2,3,4,5,10,11)]
vaSub <- vaSub[complete.cases(vaSub),]
#Find the predicted proportions for every person
logit <- coeff[1] + vaSub$asa*coeff[2] + vaSub$bmiCalc*coeff[3] +  vaSub$proced*coeff[4]
vaSub$propPred <- inv.logit(logit)
#get only the 39 period people
va39 <- vaSub[vaSub$sixmonth == 39,]
#the predicted death rate for each hospital!
expProp <- aggregate(va39$propPred,list(va39$hospcode),mean)*100
#import the data
va <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Two/cleanedData.csv")
###Run the logistic model
#without albumin
model <- glm(death30~asa + bmiCalc + proced,family = binomial(link = "logit"),
data = va)
#with albumin
modelAlb <- glm(death30~asa + bmiCalc + proced + albumin,family = binomial(link = "logit"),
data = va)
summary(model)
#Library
library(boot)
summary(model)
summary(modelAlb)
coeff <- model$coefficients
#Subset to complete cases with only the variables we care about
vaSub <- va[,c(2,3,4,5,10,11)]
vaSub <- vaSub[complete.cases(vaSub),]
#Find the predicted proportions for every person
logit <- coeff[1] + vaSub$asa*coeff[2] + vaSub$bmiCalc*coeff[3] +  vaSub$proced*coeff[4]
vaSub$propPred <- inv.logit(logit)
#get only the 39 period people
va39 <- vaSub[vaSub$sixmonth == 39,]
#the predicted death rate for each hospital!
expProp <- aggregate(va39$propPred,list(va39$hospcode),mean)*100
#Save these percentiles and add them to table 2
test <- cbind(expProp, quantProp)
write.csv(quantProp, "C:/Repositories/bios6623-elcotton/Project2/Reports/quantiles.csv")
View(test)
write.csv(test, "C:/Repositories/bios6623-elcotton/Project2/Reports/quantiles.csv")
#Save these percentiles and add them to table 2
expCI <- cbind(expProp, quantProp)
write.csv(expCI, "C:/Repositories/bios6623-elcotton/Project2/Reports/quantiles.csv")
library(boot)
#import the data
va <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Two/cleanedData.csv")
###Run the logistic model
#without albumin
model <- glm(death30~asa + bmiCalc + proced,family = binomial(link = "logit"),
data = va)
#with albumin
modelAlb <- glm(death30~asa + bmiCalc + proced + albumin,family = binomial(link = "logit"),
data = va)
summary(model)
summary(modelAlb)
coeff <- model$coefficients
#Subset to complete cases with only the variables we care about
vaSub <- va[,c(2,3,4,5,10,11)]
vaSub <- vaSub[complete.cases(vaSub),]
#Find the predicted proportions for every person
logit <- coeff[1] + vaSub$asa*coeff[2] + vaSub$bmiCalc*coeff[3] +  vaSub$proced*coeff[4]
vaSub$propPred <- inv.logit(logit)
#get only the 39 period people
va39 <- vaSub[vaSub$sixmonth == 39,]
#the predicted death rate for each hospital!
expProp <- aggregate(va39$propPred,list(va39$hospcode),mean)*100
###Do the bootstrapping
#create empty vector to fill with proportions
boot.proportions<-matrix(NA, nrow = 10000, ncol = 43)
for(i in 1:10000){
#sample new data
boot.vec <- sample(nrow(vaSub), replace = T)
boot.sp <- vaSub[boot.vec,]
#run the logistic regression
model <- glm(death30~asa + bmiCalc + proced,family = binomial(link = "logit"),
data = boot.sp)
coeff <- model$coefficients
#get the fitted values
logit <- coeff[1] + vaSub$asa*coeff[2] + vaSub$bmiCalc*coeff[3] +  vaSub$proced*coeff[4]
boot.sp$proportions <- inv.logit(logit)
#save aggregated values for each hospital in boot proportions
boot.sp39 <- boot.sp[boot.sp$sixmonth == 39,]
boot.proportions[i,] <- aggregate(boot.sp39$proportions,list(boot.sp39$hospcode),mean)[,2]*100
print(i)
}
va <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Two/cleanedData.csv")
###Run the logistic model
#without albumin
model <- glm(death30~asa + bmiCalc + proced,family = binomial(link = "logit"),
data = va)
#with albumin
modelAlb <- glm(death30~asa + bmiCalc + proced + albumin,family = binomial(link = "logit"),
data = va)
summary(model)
summary(modelAlb)
coeff <- model$coefficients
#Subset to complete cases with only the variables we care about
vaSub <- va[,c(2,3,4,5,10,11)]
vaSub <- vaSub[complete.cases(vaSub),]
#Find the predicted proportions for every person
logit <- coeff[1] + vaSub$asa*coeff[2] + vaSub$bmiCalc*coeff[3] +  vaSub$proced*coeff[4]
vaSub$propPred <- inv.logit(logit)
#get only the 39 period people
va39 <- vaSub[vaSub$sixmonth == 39,]
#the predicted death rate for each hospital!
expProp <- aggregate(va39$propPred,list(va39$hospcode),mean)*100
boot.proportions <- read.csv("C:/Repositories/bios6623-elcotton/Project2/Reports/proportions.csv")
#Get the 2.5% and 97.5% percentiles
quantProp <- matrix(NA, nrow = 43, ncol = 1)
for(i in 1:43){
quantProp[i] <- paste("(", round(quantile(boot.proportions[,i], prob = c(0.025,0.975))[1],2), ",",
round(quantile(boot.proportions[,i], prob = c(0.025,0.975))[2],2), ")", sep = "")
}
#Save these percentiles and add them to table 2
expCI <- cbind(expProp, quantProp)
write.csv(expCI, "C:/Repositories/bios6623-elcotton/Project2/Reports/quantiles.csv")
View(expCI)
boot.proportions <- read.csv("C:/Repositories/bios6623-elcotton/Project2/Reports/proportions.csv")
va <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Two/cleanedData.csv")
###Run the logistic model
#without albumin
model <- glm(death30~asa + bmiCalc + proced,family = binomial(link = "logit"),
data = va)
#with albumin
modelAlb <- glm(death30~asa + bmiCalc + proced + albumin,family = binomial(link = "logit"),
data = va)
summary(model)
summary(modelAlb)
coeff <- model$coefficients
#Subset to complete cases with only the variables we care about
vaSub <- va[,c(2,3,4,5,10,11)]
vaSub <- vaSub[complete.cases(vaSub),]
#Find the predicted proportions for every person
logit <- coeff[1] + vaSub$asa*coeff[2] + vaSub$bmiCalc*coeff[3] +  vaSub$proced*coeff[4]
vaSub$propPred <- inv.logit(logit)
#get only the 39 period people
va39 <- vaSub[vaSub$sixmonth == 39,]
#the predicted death rate for each hospital!
expProp <- aggregate(va39$propPred,list(va39$hospcode),mean)*100
quantProp <- matrix(NA, nrow = 43, ncol = 1)
for(i in 1:43){
quantProp[i] <- paste("(", round(quantile(boot.proportions[,i], prob = c(0.025,0.975))[1],2), ",",
round(quantile(boot.proportions[,i], prob = c(0.025,0.975))[2],2), ")", sep = "")
}
#Save these percentiles and add them to table 2
expCI <- cbind(expProp, quantProp)
write.csv(expCI, "C:/Repositories/bios6623-elcotton/Project2/Reports/quantiles.csv")
View(expCI)
View(boot.proportions)
quantile(boot.proportions[,1], prob = c(0.025,0.975))[1]
boot.proportions[,1]
###Do the bootstrapping
#create empty vector to fill with proportions
boot.proportions<-matrix(NA, nrow = 10000, ncol = 43)
for(i in 1:10000){
#sample new data
boot.vec <- sample(nrow(vaSub), replace = T)
boot.sp <- vaSub[boot.vec,]
#run the logistic regression
model <- glm(death30~asa + bmiCalc + proced,family = binomial(link = "logit"),
data = boot.sp)
coeff <- model$coefficients
#get the fitted values
logit <- coeff[1] + vaSub$asa*coeff[2] + vaSub$bmiCalc*coeff[3] +  vaSub$proced*coeff[4]
boot.sp$proportions <- inv.logit(logit)
#save aggregated values for each hospital in boot proportions
boot.sp39 <- boot.sp[boot.sp$sixmonth == 39,]
boot.proportions[i,] <- aggregate(boot.sp39$proportions,list(boot.sp39$hospcode),mean)[,2]*100
print(i)
}
View(boot.proportions)
boot.proportions <- read.csv("C:/Repositories/bios6623-elcotton/Project2/Reports/proportions.csv")
boot.proportions$X <- NULL
#Get the 2.5% and 97.5% percentiles
quantProp <- matrix(NA, nrow = 43, ncol = 1)
for(i in 1:43){
quantProp[i] <- paste("(", round(quantile(boot.proportions[,i], prob = c(0.025,0.975))[1],2), ",",
round(quantile(boot.proportions[,i], prob = c(0.025,0.975))[2],2), ")", sep = "")
}
#Save these percentiles and add them to table 2
expCI <- cbind(expProp, quantProp)
write.csv(expCI, "C:/Repositories/bios6623-elcotton/Project2/Reports/quantiles.csv")
