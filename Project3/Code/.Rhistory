#Subset into complete for each
mentLogI <- ment[!is.na(ment$logmemI),]
#Subset into complete for each
mentLogI <- ment[!is.na(ment$logmemI),]
mentLogII <- ment[!is.na(ment$logmemII),]
animal <- ment[!is.na(ment$animals),]
blockR <- ment[!is.na(ment$blockR),]
#delete those who don't have three measurement
keep <- names(which(table(mentLogI$id)>=3))
mentLogI <- mentLogI[mentLogI$id %in% keep,]
keep <- names(which(table(mentLogII$id)>=3))
mentLogII <- mentLogII[mentLogII$id %in% keep,]
#library
library(ggplot2)
#import data
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
ment$demind <- factor(ment$demind)
#Subset into complete for each
mentLogI <- ment[!is.na(ment$logmemI),]
mentLogII <- ment[!is.na(ment$logmemII),]
animal <- ment[!is.na(ment$animals),]
blockR <- ment[!is.na(ment$blockR),]
#delete those who don't have three measurement
keep <- names(which(table(mentLogI$id)>=3))
mentLogI <- mentLogI[mentLogI$id %in% keep,]
keep <- names(which(table(mentLogII$id)>=3))
mentLogII <- mentLogII[mentLogII$id %in% keep,]
keep <- names(which(table(animal$id)>=3))
animal <- animal[animal$id %in% keep,]
keep <- names(which(table(blockR$id)>=3))
blockR <- blockR[blockR$id %in% keep,]
ggplot(data = mentLogI, aes(x = age, y = logmemI, group = id, color = demind)) +
geom_line()
#import the data
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
#Make the empty table
tableOne <- matrix(NA, ncol = 2, nrow = 20)
ment$gender
table(ment$SES)
length(c("N", "Sex", "Male", "Female", "SES (mean ± sd)",
"Age (mean ± sd)", "Age at onset (mean ± sd)",
"Demind", "Yes", "No"))
#Make the empty table
tableOne <- matrix(NA, ncol = 2, nrow = 10)
colnames(tableOne) <- c("Variable", "All Patients")
tableOne[,1] <- c("N", "Sex", "Male", "Female", "SES (mean ± sd)",
"Age (mean ± sd)", "Age at onset (mean ± sd)",
"Demind", "Yes", "No")
table(ment$gender)
1440+1927
table(ment$demind)
summary(ment$SES)
summary(ment$Age)
ment$age
class(ment$age)
summary(ment$age)
summary(ment$ageonset)
table(ment$demind)
tableOne[1,2] <- nrow(ment)
table(ment$gender)
tableOne[3:4,2] <- paste(round(prop.table(table(ment$gender))[c(1,2)]*100,2), "(",table(ment$gender)[c(1,2)],")")
tableOne <- matrix(NA, ncol = 2, nrow = 10)
colnames(tableOne) <- c("Variable", "All Patients")
tableOne[,1] <- c("N", "Sex (n (%))", "Male", "Female", "SES (mean ± sd)",
"Age (mean ± sd)", "Age at onset (mean ± sd)",
"Demind (n (%))", "Yes", "No")
contFunc <- function(x){
return(paste(round(mean(x, na.rm = TRUE),2), "±", round(sd(x, na.rm = TRUE),2), "(Missing =", sum(is.na(x)), ")"))
}
tableOne[5,2] <- contFunc(ment$SES)
tableOne[1,2] <- nrow(ment)
tableOne[3:4,2] <- paste(round(prop.table(table(ment$gender))[c(1,2)]*100,2), "(",table(ment$gender)[c(1,2)],")")
View(tableOne)
summary(ment$gender)
summary(ment$SES)
tableOne[6,2] <- contFunc(ment$ageonset)
table(ment$demind)
tableOne[1,2] <- nrow(ment)
tableOne[3:4,2] <- paste(round(prop.table(table(ment$gender))[c(1,2)]*100,2), "(",table(ment$gender)[c(1,2)],")")
tableOne[5,2] <- contFunc(ment$SES)
tableOne[6,2] <- contFunc(ment$age)
tableOne[7,2] <- contFunc(ment$ageonset)
tableOne[9:10,2] <- paste(round(prop.table(table(ment$demind))[c(2,1)]*100,2), "(",table(ment$demind)[c(2,1)],")")
tableOne <- matrix(NA, ncol = 4, nrow = 10)
colnames(tableOne) <- c("Variable", "All Patients", "Dementia Diagnosis", "No Dementia Diagnosis")
tableOne[,1] <- c("N", "Sex (n (%))", "Male", "Female", "SES (mean ± sd)",
"Age (mean ± sd)", "Age at onset (mean ± sd)",
"Demind (n (%))", "Yes", "No")
contFunc <- function(x){
return(paste(round(mean(x, na.rm = TRUE),2), "±", round(sd(x, na.rm = TRUE),2), "(Missing =", sum(is.na(x)), ")"))
}
#Make mini datasets
mentDem <- ment[ment$demind == 1,]
mentNoDem <- ment[ment$demind == 0,]
tableOne <- matrix(NA, ncol = 4, nrow = 10)
colnames(tableOne) <- c("Variable", "All Patients", "Dementia Diagnosis", "No Dementia Diagnosis")
tableOne[,1] <- c("N", "Sex (n (%))", "Male", "Female", "SES (mean ± sd)",
"Age (mean ± sd)", "Age at onset (mean ± sd)",
"Demind (n (%))", "Yes", "No")
contFunc <- function(x){
return(paste(round(mean(x, na.rm = TRUE),2), "±", round(sd(x, na.rm = TRUE),2), "(Missing =", sum(is.na(x)), ")"))
}
#Make mini datasets
mentDem <- ment[ment$demind == 1,]
mentNoDem <- ment[ment$demind == 0,]
tableOne[1,2] <- nrow(ment)
tableOne[1,3] <- nrow(mentDem)
tableOne[1,4] <- nrow(mentNoDem)
tableOne[3:4,2] <- paste(round(prop.table(table(ment$gender))[c(1,2)]*100,2), "(",table(ment$gender)[c(1,2)],")")
tableOne[3:4,3] <- paste(round(prop.table(table(mentDem$gender))[c(1,2)]*100,2), "(",table(mentDem$gender)[c(1,2)],")")
tableOne[3:4,4] <- paste(round(prop.table(table(mentNoDem$gender))[c(1,2)]*100,2), "(",table(mentNoDem$gender)[c(1,2)],")")
tableOne[5,2] <- contFunc(ment$SES)
tableOne[5,3] <- contFunc(mentDem$SES)
tableOne[5,4] <- contFunc(mentNoDem$SES)
tableOne[6,2] <- contFunc(ment$age)
tableOne[6,3] <- contFunc(mentDem$age)
tableOne[6,4] <- contFunc(mentNoDem$age)
tableOne[7,2] <- contFunc(ment$ageonset)
tableOne[7,3] <- contFunc(mentDem$ageonset)
tableOne[7,4] <- contFunc(mentNoDem$ageonset)
tableOne[9:10,2] <- paste(round(prop.table(table(ment$demind))[c(2,1)]*100,2), "(",table(ment$demind)[c(2,1)],")")
tableOne[9:10,3] <- paste(round(prop.table(table(mentDem$demind))[c(2,1)]*100,2), "(",table(mentDem$demind)[c(2,1)],")")
tableOne[9:10,4] <- paste(round(prop.table(table(mentNoDem$demind))[c(2,1)]*100,2), "(",table(mentNoDem$demind)[c(2,1)],")")
tableOne <- matrix(NA, ncol = 4, nrow = 7)
colnames(tableOne) <- c("Variable", "All Patients", "Dementia Diagnosis", "No Dementia Diagnosis")
tableOne[,1] <- c("N", "Sex (n (%))", "Male", "Female", "SES (mean ± sd)",
"Age (mean ± sd)", "Age at onset (mean ± sd)")
contFunc <- function(x){
return(paste(round(mean(x, na.rm = TRUE),2), "±", round(sd(x, na.rm = TRUE),2), "(Missing =", sum(is.na(x)), ")"))
}
#Make mini datasets
mentDem <- ment[ment$demind == 1,]
mentNoDem <- ment[ment$demind == 0,]
tableOne[1,2] <- nrow(ment)
tableOne[1,3] <- nrow(mentDem)
tableOne[1,4] <- nrow(mentNoDem)
tableOne[3:4,2] <- paste(round(prop.table(table(ment$gender))[c(1,2)]*100,2), "(",table(ment$gender)[c(1,2)],")")
tableOne[3:4,3] <- paste(round(prop.table(table(mentDem$gender))[c(1,2)]*100,2), "(",table(mentDem$gender)[c(1,2)],")")
tableOne[3:4,4] <- paste(round(prop.table(table(mentNoDem$gender))[c(1,2)]*100,2), "(",table(mentNoDem$gender)[c(1,2)],")")
tableOne[5,2] <- contFunc(ment$SES)
tableOne[5,3] <- contFunc(mentDem$SES)
tableOne[5,4] <- contFunc(mentNoDem$SES)
tableOne[6,2] <- contFunc(ment$age)
tableOne[6,3] <- contFunc(mentDem$age)
tableOne[6,4] <- contFunc(mentNoDem$age)
tableOne[7,2] <- contFunc(ment$ageonset)
tableOne[7,3] <- contFunc(mentDem$ageonset)
tableOne[7,4] <- contFunc(mentNoDem$ageonset)
table(ment$demind)
table(ment$cdr)
table(mentDem$cdr)
table(mentNoDem$cdr)
2660+371+97+68+66
#make TableTwo: Outcome variables
tableTwo <- matrix(NA, nrow = 4, ncol = 4)
colnames(tableTwo) <- c("Variable", "All Patients", "Dementia Diagnosis", "No Dementia Diagnosis")
View(ment)
duplicated(data$id)
duplicated(ment$id)
#Get only the first measurement on each person
test <- ment[!duplicated(ment$id),]
View(tableTwo)
View(test)
#import the data
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
#Get only the first measurement on each person
ment <- ment[!duplicated(ment$id),]
#Make mini datasets
mentDem <- ment[ment$demind == 1,]
mentNoDem <- ment[ment$demind == 0,]
#Make tableOne: Demographics
tableOne <- matrix(NA, ncol = 4, nrow = 7)
colnames(tableOne) <- c("Variable", "All Patients", "Dementia Diagnosis", "No Dementia Diagnosis")
tableOne[,1] <- c("N", "Sex (n (%))", "Male", "Female", "SES (mean ± sd)",
"Age (mean ± sd)", "Age at onset (mean ± sd)")
contFunc <- function(x){
return(paste(round(mean(x, na.rm = TRUE),2), "±", round(sd(x, na.rm = TRUE),2), "(Missing =", sum(is.na(x)), ")"))
}
tableOne[1,2] <- nrow(ment)
tableOne[1,3] <- nrow(mentDem)
tableOne[1,4] <- nrow(mentNoDem)
tableOne[3:4,2] <- paste(round(prop.table(table(ment$gender))[c(1,2)]*100,2), "(",table(ment$gender)[c(1,2)],")")
tableOne[3:4,3] <- paste(round(prop.table(table(mentDem$gender))[c(1,2)]*100,2), "(",table(mentDem$gender)[c(1,2)],")")
tableOne[3:4,4] <- paste(round(prop.table(table(mentNoDem$gender))[c(1,2)]*100,2), "(",table(mentNoDem$gender)[c(1,2)],")")
tableOne[5,2] <- contFunc(ment$SES)
tableOne[5,3] <- contFunc(mentDem$SES)
tableOne[5,4] <- contFunc(mentNoDem$SES)
tableOne[6,2] <- contFunc(ment$age)
tableOne[6,3] <- contFunc(mentDem$age)
tableOne[6,4] <- contFunc(mentNoDem$age)
tableOne[7,2] <- contFunc(ment$ageonset)
tableOne[7,3] <- contFunc(mentDem$ageonset)
tableOne[7,4] <- contFunc(mentNoDem$ageonset)
View(tableOne)
#make TableTwo: Outcome variables
tableTwo <- matrix(NA, nrow = 4, ncol = 4)
colnames(tableTwo) <- c("Variable", "All Patients", "Dementia Diagnosis", "No Dementia Diagnosis")
table(ment$cdr)
tableTwo[2,2] <- contFunc(ment$blockR)
tableTwo[2,3] <- contFunc(mentDem$blockR)
tableTwo[2,4] <- contFunc(mentNoDem$blockR)
tableTwo[3,2] <- contFunc(ment$animals)
tableTwo[3,3] <- contFunc(mentDem$animals)
tableTwo[3,4] <- contFunc(mentNoDem$animals)
tableTwo[4,2] <- contFunc(ment$logmemI)
tableTwo[4,3] <- contFunc(mentDem$logmemI)
tableTwo[4,4] <- contFunc(mentNoDem$logmemI)
tableTwo[5,2] <- contFunc(ment$logmemII)
tableTwo[5,3] <- contFunc(mentDem$logmemII)
tableTwo[5,4] <- contFunc(mentNoDem$logmemII)
#make TableTwo: Outcome variables
tableTwo <- matrix(NA, nrow = 5, ncol = 4)
colnames(tableTwo) <- c("Variable", "All Patients", "Dementia Diagnosis", "No Dementia Diagnosis")
tableTwo[,1] <- c("Baseline Values", "Block Design Test Score",
"Category Fluency for Animals Score",
"Logical Memory I Story A Score",
"Logical Memory II Story A Score")
tableTwo[2,2] <- contFunc(ment$blockR)
tableTwo[2,3] <- contFunc(mentDem$blockR)
tableTwo[2,4] <- contFunc(mentNoDem$blockR)
tableTwo[3,2] <- contFunc(ment$animals)
tableTwo[3,3] <- contFunc(mentDem$animals)
tableTwo[3,4] <- contFunc(mentNoDem$animals)
tableTwo[4,2] <- contFunc(ment$logmemI)
tableTwo[4,3] <- contFunc(mentDem$logmemI)
tableTwo[4,4] <- contFunc(mentNoDem$logmemI)
tableTwo[5,2] <- contFunc(ment$logmemII)
tableTwo[5,3] <- contFunc(mentDem$logmemII)
tableTwo[5,4] <- contFunc(mentNoDem$logmemII)
write.csv(tableTwo, "C:/Repositories/bios6623-elcotton/Project2/Reports/tableTwo.csv")
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
#Get only the first measurement on each person
ment <- ment[!duplicated(ment$id),]
#Make mini datasets
mentDem <- ment[ment$demind == 1,]
mentNoDem <- ment[ment$demind == 0,]
#Make tableOne: Demographics
tableOne <- matrix(NA, ncol = 4, nrow = 7)
colnames(tableOne) <- c("Variable", "All Patients", "Dementia Diagnosis", "No Dementia Diagnosis")
tableOne[,1] <- c("N", "Sex (n (%))", "Male", "Female", "SES (mean ± sd)",
"Age (mean ± sd)", "Age at onset (mean ± sd)")
contFunc <- function(x){
return(paste(round(mean(x, na.rm = TRUE),2), "±", round(sd(x, na.rm = TRUE),2), "(Missing =", sum(is.na(x)), ")"))
}
tableOne[1,2] <- nrow(ment)
tableOne[1,3] <- nrow(mentDem)
tableOne[1,4] <- nrow(mentNoDem)
tableOne[3:4,2] <- paste(round(prop.table(table(ment$gender))[c(1,2)]*100,2), "(",table(ment$gender)[c(1,2)],")")
tableOne[3:4,3] <- paste(round(prop.table(table(mentDem$gender))[c(1,2)]*100,2), "(",table(mentDem$gender)[c(1,2)],")")
tableOne[3:4,4] <- paste(round(prop.table(table(mentNoDem$gender))[c(1,2)]*100,2), "(",table(mentNoDem$gender)[c(1,2)],")")
tableOne[5,2] <- contFunc(ment$SES)
tableOne[5,3] <- contFunc(mentDem$SES)
tableOne[5,4] <- contFunc(mentNoDem$SES)
tableOne[6,2] <- contFunc(ment$age)
tableOne[6,3] <- contFunc(mentDem$age)
tableOne[6,4] <- contFunc(mentNoDem$age)
tableOne[7,2] <- contFunc(ment$ageonset)
tableOne[7,3] <- contFunc(mentDem$ageonset)
tableOne[7,4] <- contFunc(mentNoDem$ageonset)
write.csv(tableOne, "C:/Repositories/bios6623-elcotton/Project2/Reports/tableOne.csv")
library(ggplot2)
#import data
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
ment$demind <- factor(ment$demind)
#Subset into complete for each
mentLogI <- ment[!is.na(ment$logmemI),]
mentLogII <- ment[!is.na(ment$logmemII),]
animal <- ment[!is.na(ment$animals),]
blockR <- ment[!is.na(ment$blockR),]
#delete those who don't have three measurement
keep <- names(which(table(mentLogI$id)>=3))
mentLogI <- mentLogI[mentLogI$id %in% keep,]
keep <- names(which(table(mentLogII$id)>=3))
mentLogII <- mentLogII[mentLogII$id %in% keep,]
keep <- names(which(table(animal$id)>=3))
animal <- animal[animal$id %in% keep,]
keep <- names(which(table(blockR$id)>=3))
blockR <- blockR[blockR$id %in% keep,]
###make the spaghetti plots: each outcome by age
#For the Wechsler Memory Scale Logical Memory I Story A
#logmemI variable
ggplot(data = mentLogI, aes(x = age, y = logmemI, group = id, color = demind)) +
geom_line()
ggplot(data = mentLogI, aes(x = age, y = logmemI, group = id, color = demind)) +
geom_line(color = c("seagreen3", "darkorange1")) +
theme_bw() +
scale_x_continuous(name = "Age (Years)") +
scale_y_continuous(name = "Logical Memory I Story A score") +
labs(title = "Graph 1: Logical Memory I Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold"))
ggplot(data = mentLogI, aes(x = age, y = logmemI, group = id, color = demind)) +
geom_line(aes(color = c("seagreen3", "darkorange1"))) +
theme_bw() +
scale_x_continuous(name = "Age (Years)") +
scale_y_continuous(name = "Logical Memory I Story A score") +
labs(title = "Graph 1: Logical Memory I Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold"))
View(mentLogI)
ggplot(data = mentLogI, aes(x = age, y = logmemI, group = id, color = demind)) +
geom_line() +
scale_color_manual(values=c("seagreen3", "darkorange1")) +
theme_bw() +
scale_x_continuous(name = "Age (Years)") +
scale_y_continuous(name = "Logical Memory I Story A score") +
labs(title = "Graph 1: Logical Memory I Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold"))
ggplot(data = mentLogI, aes(x = age, y = logmemI, group = id, color = demind)) +
geom_line() +
scale_color_manual(values=c("seagreen3", "darkorange1")) +
theme_bw() +
scale_x_continuous(name = "Age (Years)") +
scale_y_continuous(name = "Logical Memory I Story A score") +
labs(title = "Graph 1: Logical Memory I Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
theme(legend.position="none")
ggplot(data = mentLogI, aes(x = age, y = logmemI, group = id, color = demind)) +
geom_line() +
scale_color_manual(values=c("seagreen3", "darkorange1")) +
theme_bw() +
scale_x_continuous(name = "Age (Years)") +
scale_y_continuous(name = "Logical Memory I Story A score") +
labs(title = "Graph 1: Logical Memory I Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold"))
ggplot(data = mentLogI, aes(x = age, y = logmemI, group = id, color = demind)) +
geom_line() +
scale_color_manual(values=c("seagreen3", "darkorange1"), name = "Dementia Status") +
theme_bw() +
scale_x_continuous(name = "Age (Years)") +
scale_y_continuous(name = "Logical Memory I Story A score") +
labs(title = "Graph 1: Logical Memory I Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold"))
ggplot(data = mentLogI, aes(x = age, y = logmemI, group = id, color = demind)) +
geom_line() +
scale_color_manual(values=c("seagreen3", "darkorange1"), name = "Dementia\nStatus",
labels = c("Yes", "No")) +
theme_bw() +
scale_x_continuous(name = "Age (Years)") +
scale_y_continuous(name = "Logical Memory I Story A score") +
labs(title = "Graph 1: Logical Memory I Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold"))
ggplot(data = mentLogI, aes(x = age, y = logmemI, group = id, color = demind)) +
geom_line() +
scale_color_manual(values=c("deepskyblue", "darkgoldenrod1"), name = "Dementia\nStatus",
labels = c("Yes", "No")) +
theme_bw() +
scale_x_continuous(name = "Age (Years)") +
scale_y_continuous(name = "Logical Memory I Story A score") +
labs(title = "Graph 1: Logical Memory I Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold"))
ggplot(data = mentLogI, aes(x = age, y = logmemI, group = id, color = demind)) +
geom_line() +
scale_color_manual(values=c("deepskyblue", "darkgoldenrod1"), name = "Dementia\nStatus",
labels = c("Yes", "No")) +
theme_bw() +
scale_x_continuous(name = "Age (Years)") +
scale_y_continuous(name = "Logical Memory I Story A score") +
labs(title = "Graph 1: Logical Memory I Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
theme(legend.title = element_text(face = "bold", hjust = 0.5)) +
theme(legend.position = "bottom")
ggplot(data = mentLogI, aes(x = age, y = logmemI, group = id, color = demind)) +
geom_line() +
scale_color_manual(values=c("deepskyblue", "darkgoldenrod1"), name = "Dementia\nStatus",
labels = c("Yes", "No")) +
theme_bw() +
scale_x_continuous(name = "Age (Years)") +
scale_y_continuous(name = "Logical Memory I Story A score") +
labs(title = "Graph 1: Logical Memory I Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
theme(legend.title = element_text(face = "bold", hjust = 0.5))
ggplot(data = mentLogI, aes(x = age, y = logmemI, group = id, color = demind)) +
geom_line() +
scale_color_manual(values=c("deepskyblue", "darkgoldenrod1"), name = "Dementia\nStatus",
labels = c("Yes", "No")) +
theme_bw() +
scale_x_continuous(name = "Age (Years)") +
scale_y_continuous(name = "Logical Memory I Story A score") +
labs(title = "Graph 1: Logical Memory I Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
theme(legend.title = element_text(face = "bold")) +
theme(legend.position = "bottom") +
theme(legend.title.align=0.5)
ggplot(data = mentLogI, aes(x = age, y = logmemI, group = id, color = demind)) +
geom_line() +
scale_color_manual(values=c("deepskyblue", "darkgoldenrod1"), name = "Dementia\nStatus",
labels = c("Yes", "No")) +
theme_bw() +
scale_x_continuous(name = "Age (Years)") +
scale_y_continuous(name = "Logical Memory I Story A score") +
labs(title = "Graph 1: Logical Memory I Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
theme(legend.title = element_text(face = "bold")) +
theme(legend.title.align=0.5)
ggplot(data = mentLogII, aes(x = age, y = logmemII, group = id, color = demind)) +
geom_line()+
scale_color_manual(values=c("deepskyblue", "darkgoldenrod1"), name = "Dementia\nStatus",
labels = c("Yes", "No")) +
theme_bw() +
scale_x_continuous(name = "Age (Years)") +
scale_y_continuous(name = "Logical Memory II Story A score") +
labs(title = "Graph 1: Logical Memory II Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
theme(legend.title = element_text(face = "bold")) +
theme(legend.title.align=0.5)
ggplot(data = animal, aes(x = age, y = animals, group = id, color = demind)) +
geom_line() +
scale_color_manual(values=c("deepskyblue", "darkgoldenrod1"), name = "Dementia\nStatus",
labels = c("Yes", "No")) +
theme_bw() +
scale_x_continuous(name = "Age (Years)") +
scale_y_continuous(name = "Category Fluency for Animals Score") +
labs(title = "Graph 3: Category Fluency Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
theme(legend.title = element_text(face = "bold")) +
theme(legend.title.align=0.5)
ggplot(data = blockR, aes(x = age, y = blockR, group = id, color = demind)) +
geom_line() +
scale_color_manual(values=c("deepskyblue", "darkgoldenrod1"), name = "Dementia\nStatus",
labels = c("No", "Yes")) +
theme_bw() +
scale_x_continuous(name = "Age (Years)") +
scale_y_continuous(name = "Block Design Test Score") +
labs(title = "Graph 4: Block Design Test Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
theme(legend.title = element_text(face = "bold")) +
theme(legend.title.align=0.5)
###################################################
# BIOS 6623: Project 3                            #
# Date: 11/11/17                                  #
# Purpose: Make Table1-Demo, Make Table2-Outcome  #
###################################################
#import the data
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
#Get only the first measurement on each person
ment <- ment[!duplicated(ment$id),]
#Make mini datasets
mentDem <- ment[ment$demind == 1,]
mentNoDem <- ment[ment$demind == 0,]
#Make tableOne: Demographics
tableOne <- matrix(NA, ncol = 4, nrow = 7)
colnames(tableOne) <- c("Variable", "All Patients", "Dementia Diagnosis", "No Dementia Diagnosis")
tableOne[,1] <- c("N", "Sex (n (%))", "Male", "Female", "SES (mean ± sd)",
"Age (mean ± sd)", "Age at onset (mean ± sd)")
contFunc <- function(x){
return(paste(round(mean(x, na.rm = TRUE),2), "±", round(sd(x, na.rm = TRUE),2), "(Missing =", sum(is.na(x)), ")"))
}
tableOne[1,2] <- nrow(ment)
tableOne[1,3] <- nrow(mentDem)
tableOne[1,4] <- nrow(mentNoDem)
tableOne[3:4,2] <- paste(round(prop.table(table(ment$gender))[c(1,2)]*100,2), "(",table(ment$gender)[c(1,2)],")")
tableOne[3:4,3] <- paste(round(prop.table(table(mentDem$gender))[c(1,2)]*100,2), "(",table(mentDem$gender)[c(1,2)],")")
tableOne[3:4,4] <- paste(round(prop.table(table(mentNoDem$gender))[c(1,2)]*100,2), "(",table(mentNoDem$gender)[c(1,2)],")")
tableOne[5,2] <- contFunc(ment$SES)
tableOne[5,3] <- contFunc(mentDem$SES)
tableOne[5,4] <- contFunc(mentNoDem$SES)
tableOne[6,2] <- contFunc(ment$age)
tableOne[6,3] <- contFunc(mentDem$age)
tableOne[6,4] <- contFunc(mentNoDem$age)
tableOne[7,2] <- contFunc(ment$ageonset)
tableOne[7,3] <- contFunc(mentDem$ageonset)
tableOne[7,4] <- contFunc(mentNoDem$ageonset)
write.csv(tableOne, "C:/Repositories/bios6623-elcotton/Project3/Reports/tableOne.csv")
#make TableTwo: Outcome variables
tableTwo <- matrix(NA, nrow = 5, ncol = 4)
colnames(tableTwo) <- c("Variable", "All Patients", "Dementia Diagnosis", "No Dementia Diagnosis")
tableTwo[,1] <- c("Baseline Values", "Block Design Test Score",
"Category Fluency for Animals Score",
"Logical Memory I Story A Score",
"Logical Memory II Story A Score")
tableTwo[2,2] <- contFunc(ment$blockR)
tableTwo[2,3] <- contFunc(mentDem$blockR)
tableTwo[2,4] <- contFunc(mentNoDem$blockR)
tableTwo[3,2] <- contFunc(ment$animals)
tableTwo[3,3] <- contFunc(mentDem$animals)
tableTwo[3,4] <- contFunc(mentNoDem$animals)
tableTwo[4,2] <- contFunc(ment$logmemI)
tableTwo[4,3] <- contFunc(mentDem$logmemI)
tableTwo[4,4] <- contFunc(mentNoDem$logmemI)
tableTwo[5,2] <- contFunc(ment$logmemII)
tableTwo[5,3] <- contFunc(mentDem$logmemII)
tableTwo[5,4] <- contFunc(mentNoDem$logmemII)
write.csv(tableTwo, "C:/Repositories/bios6623-elcotton/Project3/Reports/tableTwo.csv")
