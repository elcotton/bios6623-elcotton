t1<-blockR$ageDiff
y<-blockR$blockR
ses <- blockR$SES
gender <- as.factor(blockR$gender)
age <- blockR$age
#Sequence of change points to consider
cps<-seq(-15,0,0.1)
#Create a function to search for change point
#and fit final change point model
cp.search_and_fit<-function(patid, t1, y, cps,ses,gender,age){
#Place to store likelihoods from the CP search
ll<-data.frame(changepoint=rep(NA,length(cps)), ll=rep(NA,length(cps)))
#Search for the CP
for (i in 1:length(cps)){cp<-cps[i]
t2<-ifelse(t1>cp, t1-cp, 0)
cp.model<-lme(y~t1+t2 + gender + ses + age, random=~1|patid, method='ML')
ll[i,]<-c(cp,logLik(cp.model))
}
#Plot the likelihood
plot(ll$changepoint, ll$ll, type='l', xlab='Change Point (years)', ylab='Log Likelihood')
#Find the max
cp<-ll[which(ll$ll==max(ll$ll)),'changepoint']
print(cp)
#Fit the final model
t2<-ifelse(t1>cp, t1-cp, 0)
cp.model<-lme(y~t1+t2+ gender + ses + age, random=~1|patid)
return(list(cp=cp, model=cp.model))}
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
summary(cp.model$model)
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
#get the difference between age and age of onset
ment$ageDiff <- ment$age-ment$ageonset
mentDem <- ment[ment$demind == 1,]
#make graph that is in the paper, for block ID
blockR <- ment[!is.na(ment$blockR),]
keep <- names(which(table(blockR$id)>=3))
blockR <- blockR[blockR$id %in% keep,]
patid<-as.character(blockR$id)
t1<-blockR$age
y<-blockR$blockR
ses <- blockR$SES
gender <- as.factor(blockR$gender)
age <- blockR$age-59
demind <- blockR$demind
patid<-as.character(blockR$id)
t1<-blockR$age-59
y<-blockR$blockR
ses <- blockR$SES
gender <- as.factor(blockR$gender)
demind <- blockR$demind
patid<-as.character(blockR$id)
t1<-blockR$age-59
y<-blockR$blockR
ses <- blockR$SES
gender <- as.factor(blockR$gender)
demind <- blockR$demind
#Sequence of change points to consider
cps<-seq(-15,0,0.1)
#Create a function to search for change point
#and fit final change point model
cp.search_and_fit<-function(patid, t1, y, cps,ses,gender,age){
#Place to store likelihoods from the CP search
ll<-data.frame(changepoint=rep(NA,length(cps)), ll=rep(NA,length(cps)))
#Search for the CP
for (i in 1:length(cps)){cp<-cps[i]
t2<-ifelse(t1>cp, t1-cp, 0)
cp.model<-lme(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid, method='ML')
ll[i,]<-c(cp,logLik(cp.model))
}
#Plot the likelihood
plot(ll$changepoint, ll$ll, type='l', xlab='Change Point (years)', ylab='Log Likelihood')
#Find the max
cp<-ll[which(ll$ll==max(ll$ll)),'changepoint']
print(cp)
#Fit the final model
t2<-ifelse(t1>cp, t1-cp, 0)
cp.model<-lme(y~t1+t2+ gender + ses + age, random=~1|patid)
return(list(cp=cp, model=cp.model))}
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
summary(cp.model$model)
patid<-as.character(blockR$id)
t1<-blockR$age-59
y<-blockR$blockR
ses <- blockR$SES
gender <- as.factor(blockR$gender)
demind <- blockR$demind
#Sequence of change points to consider
cps<-seq(-14,-0.1,0.1)
#Create a function to search for change point
#and fit final change point model
cp.search_and_fit<-function(patid, t1, y, cps,ses,gender,age){
#Place to store likelihoods from the CP search
ll<-data.frame(changepoint=rep(NA,length(cps)), ll=rep(NA,length(cps)))
#Search for the CP
for (i in 1:length(cps)){cp<-cps[i]
t2<-ifelse(t1>cp, t1-cp, 0)
cp.model<-lme(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid, method='ML')
ll[i,]<-c(cp,logLik(cp.model))
}
#Plot the likelihood
plot(ll$changepoint, ll$ll, type='l', xlab='Change Point (years)', ylab='Log Likelihood')
#Find the max
cp<-ll[which(ll$ll==max(ll$ll)),'changepoint']
print(cp)
#Fit the final model
t2<-ifelse(t1>cp, t1-cp, 0)
cp.model<-lme(y~t1+t2+ gender + ses + age, random=~1|patid)
return(list(cp=cp, model=cp.model))}
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
summary(cp.model$model)
###Following camille's example-BlockR
#Data
patid<-as.character(blockR$id)
t1<-blockR$age-59
ageDiff <- blockR$ageDiff
y<-blockR$blockR
ses <- blockR$SES
gender <- as.factor(blockR$gender)
demind <- blockR$demind
patid<-as.character(blockR$id)
t1<-blockR$age-59
ageDiff <- blockR$ageDiff
y<-blockR$blockR
ses <- blockR$SES
gender <- as.factor(blockR$gender)
demind <- blockR$demind
#Sequence of change points to consider
cps<-seq(-14,-0.1,0.1)
#Create a function to search for change point
#and fit final change point model
cp.search_and_fit<-function(patid, t1, y, cps,ses,gender,age){
#Place to store likelihoods from the CP search
ll<-data.frame(changepoint=rep(NA,length(cps)), ll=rep(NA,length(cps)))
#Search for the CP
for (i in 1:length(cps)){cp<-cps[i]
t2<-max(0,(agediff+cp))
cp.model<-lme(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid, method='ML')
ll[i,]<-c(cp,logLik(cp.model))
}
#Plot the likelihood
plot(ll$changepoint, ll$ll, type='l', xlab='Change Point (years)', ylab='Log Likelihood')
#Find the max
cp<-ll[which(ll$ll==max(ll$ll)),'changepoint']
print(cp)
#Fit the final model
t2<-max(0,(agediff+cp))
cp.model<-lme(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid)
return(list(cp=cp, model=cp.model))}
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
summary(cp.model$model)
patid<-as.character(blockR$id)
t1<-blockR$age-59
ageDiff <- blockR$ageDiff
y<-blockR$blockR
ses <- blockR$SES
gender <- as.factor(blockR$gender)
demind <- blockR$demind
#Sequence of change points to consider
cps<-seq(-14,-0.1,0.1)
#Create a function to search for change point
#and fit final change point model
cp.search_and_fit<-function(patid, t1, y, cps,ses,gender,age){
#Place to store likelihoods from the CP search
ll<-data.frame(changepoint=rep(NA,length(cps)), ll=rep(NA,length(cps)))
#Search for the CP
for (i in 1:length(cps)){cp<-cps[i]
t2<-max(0,(ageDiff+cp))
cp.model<-lme(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid, method='ML')
ll[i,]<-c(cp,logLik(cp.model))
}
#Plot the likelihood
plot(ll$changepoint, ll$ll, type='l', xlab='Change Point (years)', ylab='Log Likelihood')
#Find the max
cp<-ll[which(ll$ll==max(ll$ll)),'changepoint']
print(cp)
#Fit the final model
t2<-max(0,(ageDiff+cp))
cp.model<-lme(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid)
return(list(cp=cp, model=cp.model))}
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
summary(cp.model$model)
t2<-max(0,(ageDiff+cp))
t2<-max(0,(ageDiff-14))
t2
?length
?len
max(rep(0,length(ageDiff)),(ageDiff-14))
rep(0,length(ageDiff))
lapply(ageDiff, function(x) max(0,x-14))
table(lapply(ageDiff, function(x) max(0,x-14)))
sapply(ageDiff, function(x) max(0,x+cp))
sapply(ageDiff, function(x) max(0,x-14))
patid<-as.character(blockR$id)
t1<-blockR$age-59
ageDiff <- blockR$ageDiff
y<-blockR$blockR
ses <- blockR$SES
gender <- as.factor(blockR$gender)
demind <- blockR$demind
#Sequence of change points to consider
cps<-seq(-14,-0.1,0.1)
#Create a function to search for change point
#and fit final change point model
cp.search_and_fit<-function(patid, t1, y, cps,ses,gender,age){
#Place to store likelihoods from the CP search
ll<-data.frame(changepoint=rep(NA,length(cps)), ll=rep(NA,length(cps)))
#Search for the CP
for (i in 1:length(cps)){cp<-cps[i]
t2<-sapply(ageDiff, function(x) max(0,x+cp))
cp.model<-lme(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid, method='ML')
ll[i,]<-c(cp,logLik(cp.model))
}
#Plot the likelihood
plot(ll$changepoint, ll$ll, type='l', xlab='Change Point (years)', ylab='Log Likelihood')
#Find the max
cp<-ll[which(ll$ll==max(ll$ll)),'changepoint']
print(cp)
#Fit the final model
t2<-sapply(ageDiff, function(x) max(0,x+cp))
cp.model<-lme(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid)
return(list(cp=cp, model=cp.model))}
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
summary(cp.model$model)
t2 <- (0,.3,0,NA,1,0)
t2 <- c(0,.3,0,NA,1,0)
ifelse(is.na(t2),0,t2)
patid<-as.character(blockR$id)
t1<-blockR$age-59
ageDiff <- blockR$ageDiff
y<-blockR$blockR
ses <- blockR$SES
gender <- as.factor(blockR$gender)
demind <- blockR$demind
#Sequence of change points to consider
cps<-seq(-14,-0.1,0.1)
#Create a function to search for change point
#and fit final change point model
cp.search_and_fit<-function(patid, t1, y, cps,ses,gender,age){
#Place to store likelihoods from the CP search
ll<-data.frame(changepoint=rep(NA,length(cps)), ll=rep(NA,length(cps)))
#Search for the CP
for (i in 1:length(cps)){cp<-cps[i]
t2<-sapply(ageDiff, function(x) max(0,x+cp))
t2 <- ifelse(is.na(t2),0,t2)
cp.model<-lme(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid, method='ML')
ll[i,]<-c(cp,logLik(cp.model))
}
#Plot the likelihood
plot(ll$changepoint, ll$ll, type='l', xlab='Change Point (years)', ylab='Log Likelihood')
#Find the max
cp<-ll[which(ll$ll==max(ll$ll)),'changepoint']
print(cp)
#Fit the final model
t2<-sapply(ageDiff, function(x) max(0,x+cp))
t2 <- ifelse(is.na(t2),0,t2)
cp.model<-lme(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid)
return(list(cp=cp, model=cp.model))}
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
summary(cp.model$model)
cps<-seq(-12,-0.3,0.1)
#Create a function to search for change point
#and fit final change point model
cp.search_and_fit<-function(patid, t1, y, cps,ses,gender,age){
#Place to store likelihoods from the CP search
ll<-data.frame(changepoint=rep(NA,length(cps)), ll=rep(NA,length(cps)))
#Search for the CP
for (i in 1:length(cps)){cp<-cps[i]
t2<-sapply(ageDiff, function(x) max(0,x+cp))
t2 <- ifelse(is.na(t2),0,t2)
cp.model<-lme(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid, method='ML')
ll[i,]<-c(cp,logLik(cp.model))
}
#Plot the likelihood
plot(ll$changepoint, ll$ll, type='l', xlab='Change Point (years)', ylab='Log Likelihood')
#Find the max
cp<-ll[which(ll$ll==max(ll$ll)),'changepoint']
print(cp)
#Fit the final model
t2<-sapply(ageDiff, function(x) max(0,x+cp))
t2 <- ifelse(is.na(t2),0,t2)
cp.model<-lme(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid)
return(list(cp=cp, model=cp.model))}
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
summary(cp.model$model)
patid<-as.character(blockR$id)
t1<-blockR$age-59
ageDiff <- blockR$ageDiff
y<-blockR$blockR
ses <- blockR$SES
gender <- as.factor(blockR$gender)
demind <- blockR$demind
#Sequence of change points to consider
cps<-seq(-12,-0.3,0.1)
#Create a function to search for change point
#and fit final change point model
cp.search_and_fit<-function(patid, t1, y, cps,ses,gender,age){
#Place to store likelihoods from the CP search
ll<-data.frame(changepoint=rep(NA,length(cps)), ll=rep(NA,length(cps)))
#Search for the CP
for (i in 1:length(cps)){cp<-cps[i]
t2<-sapply(ageDiff, function(x) max(0,x+cp))
t2 <- ifelse(is.na(t2),0,t2)
cp.model<-lme(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid, method='ML')
ll[i,]<-c(cp,logLik(cp.model))
}
#Plot the likelihood
plot(ll$changepoint, ll$ll, type='l', xlab='Change Point (years)', ylab='Log Likelihood')
#Find the max
cp<-ll[which(ll$ll==max(ll$ll)),'changepoint']
print(cp)
#Fit the final model
t2<-sapply(ageDiff, function(x) max(0,x+cp))
t2 <- ifelse(is.na(t2),0,t2)
cp.model<-lme(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid)
return(list(cp=cp, model=cp.model))}
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
summary(cp.model$model)
summary(blockR$ageDiff)
patid<-as.character(blockR$id)
t1<-blockR$age-59
ageDiff <- ifelse(is.na(blockR$ageDiff),0,blockR$ageDiff)
y<-blockR$blockR
ses <- blockR$SES
gender <- as.factor(blockR$gender)
demind <- blockR$demind
#Sequence of change points to consider
cps<-seq(-12,-0.3,0.1)
#Create a function to search for change point
#and fit final change point model
cp.search_and_fit<-function(patid, t1, y, cps,ses,gender,age){
#Place to store likelihoods from the CP search
ll<-data.frame(changepoint=rep(NA,length(cps)), ll=rep(NA,length(cps)))
#Search for the CP
for (i in 1:length(cps)){cp<-cps[i]
t2<-sapply(ageDiff, function(x) max(0,x+cp))
cp.model<-lme(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid, method='ML')
ll[i,]<-c(cp,logLik(cp.model))
}
#Plot the likelihood
plot(ll$changepoint, ll$ll, type='l', xlab='Change Point (years)', ylab='Log Likelihood')
#Find the max
cp<-ll[which(ll$ll==max(ll$ll)),'changepoint']
print(cp)
#Fit the final model
t2<-sapply(ageDiff, function(x) max(0,x+cp))
cp.model<-lme(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid)
return(list(cp=cp, model=cp.model))}
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
summary(cp.model$model)
cps<-seq(-9,-4,0.1)
#Create a function to search for change point
#and fit final change point model
cp.search_and_fit<-function(patid, t1, y, cps,ses,gender,age){
#Place to store likelihoods from the CP search
ll<-data.frame(changepoint=rep(NA,length(cps)), ll=rep(NA,length(cps)))
#Search for the CP
for (i in 1:length(cps)){cp<-cps[i]
t2<-sapply(ageDiff, function(x) max(0,x+cp))
cp.model<-lme(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid, method='ML')
ll[i,]<-c(cp,logLik(cp.model))
}
#Plot the likelihood
plot(ll$changepoint, ll$ll, type='l', xlab='Change Point (years)', ylab='Log Likelihood')
#Find the max
cp<-ll[which(ll$ll==max(ll$ll)),'changepoint']
print(cp)
#Fit the final model
t2<-sapply(ageDiff, function(x) max(0,x+cp))
cp.model<-lme(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid)
return(list(cp=cp, model=cp.model))}
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
summary(cp.model$model)
cps<-seq(-9,-4,0.1)
#Create a function to search for change point
#and fit final change point model
cp.search_and_fit<-function(patid, t1, y, cps,ses,gender,age){
#Place to store likelihoods from the CP search
ll<-data.frame(changepoint=rep(NA,length(cps)), ll=rep(NA,length(cps)))
#Search for the CP
for (i in 1:length(cps)){cp<-cps[i]
t2<-sapply(ageDiff, function(x) max(0,x+cp))
cp.model<-lme(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid, method='ML')
ll[i,]<-c(cp,logLik(cp.model))
}
#Plot the likelihood
plot(ll$changepoint, ll$ll, type='l', xlab='Change Point (years)', ylab='Log Likelihood')
#Find the max
cp<-ll[which(ll$ll==max(ll$ll)),'changepoint']
print(cp)
#Fit the final model
t2<-sapply(ageDiff, function(x) max(0,x+cp))
cp.model<-lme(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid)
return(list(cp=cp, model=cp.model))}
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
summary(cp.model$model)
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
patid<-as.character(blockR$id)
t1<-blockR$age-59
ageDiff <- ifelse(is.na(blockR$ageDiff),0,blockR$ageDiff)
y<-blockR$blockR
ses <- blockR$SES
gender <- as.factor(blockR$gender)
demind <- blockR$demind
#Sequence of change points to consider
cps<-seq(-9,-4,0.1)
#Create a function to search for change point
#and fit final change point model
cp.search_and_fit<-function(patid, t1, y, cps,ses,gender,age){
#Place to store likelihoods from the CP search
ll<-data.frame(changepoint=rep(NA,length(cps)), ll=rep(NA,length(cps)))
#Search for the CP
for (i in 1:length(cps)){
cp<-cps[i]
t2<-sapply(ageDiff, function(x) max(0,x+cp))
cp.model<-lme(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid, method='ML')
ll[i,]<-c(cp,logLik(cp.model))
}
#Plot the likelihood
plot(ll$changepoint, ll$ll, type='l', xlab='Change Point (years)', ylab='Log Likelihood')
#Find the max
cp<-ll[which(ll$ll==max(ll$ll)),'changepoint']
print(cp)
#Fit the final model
t2<-sapply(ageDiff, function(x) max(0,x+cp))
cp.model<-lme(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid)
return(list(cp=cp, model=cp.model))}
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
summary(cp.model$model)
patid<-as.character(blockR$id)
t1<-blockR$age-59
ageDiff <- ifelse(is.na(blockR$ageDiff),0,blockR$ageDiff)
y<-blockR$blockR
ses <- blockR$SES
gender <- as.factor(blockR$gender)
demind <- blockR$demind
#Sequence of change points to consider
cps<-seq(-9,-4,0.1)
#Create a function to search for change point
#and fit final change point model
cp.search_and_fit<-function(patid, t1, y, cps,ses,gender,age){
#Place to store likelihoods from the CP search
ll<-data.frame(changepoint=rep(NA,length(cps)), ll=rep(NA,length(cps)))
#Search for the CP
for (i in 1:length(cps)){
cp<-cps[i]
t2<-sapply(ageDiff, function(x) max(0,x+cp))
cp.model<-lmer(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid, method='ML')
ll[i,]<-c(cp,logLik(cp.model))
}
#Plot the likelihood
plot(ll$changepoint, ll$ll, type='l', xlab='Change Point (years)', ylab='Log Likelihood')
#Find the max
cp<-ll[which(ll$ll==max(ll$ll)),'changepoint']
print(cp)
#Fit the final model
t2<-sapply(ageDiff, function(x) max(0,x+cp))
cp.model<-lmer(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid)
return(list(cp=cp, model=cp.model))}
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
summary(cp.model$model)
library(lme4)
patid<-as.character(blockR$id)
t1<-blockR$age-59
ageDiff <- ifelse(is.na(blockR$ageDiff),0,blockR$ageDiff)
y<-blockR$blockR
ses <- blockR$SES
gender <- as.factor(blockR$gender)
demind <- blockR$demind
#Sequence of change points to consider
cps<-seq(-9,-4,0.1)
#Create a function to search for change point
#and fit final change point model
cp.search_and_fit<-function(patid, t1, y, cps,ses,gender,age){
#Place to store likelihoods from the CP search
ll<-data.frame(changepoint=rep(NA,length(cps)), ll=rep(NA,length(cps)))
#Search for the CP
for (i in 1:length(cps)){
cp<-cps[i]
t2<-sapply(ageDiff, function(x) max(0,x+cp))
cp.model<-lmer(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid, method='ML')
ll[i,]<-c(cp,logLik(cp.model))
}
#Plot the likelihood
plot(ll$changepoint, ll$ll, type='l', xlab='Change Point (years)', ylab='Log Likelihood')
#Find the max
cp<-ll[which(ll$ll==max(ll$ll)),'changepoint']
print(cp)
#Fit the final model
t2<-sapply(ageDiff, function(x) max(0,x+cp))
cp.model<-lmer(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid)
return(list(cp=cp, model=cp.model))}
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
summary(cp.model$model)
?lme
library(lme4)
?lme
