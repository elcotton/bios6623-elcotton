patid<-as.character(LogI$id)
t1<-LogI$ageDiff
y<-LogI$animals
ses <- LogI$SES
gender <- as.factor(LogI$gender)
age <- LogI$age
#Sequence of change points to consider
cps<-seq(-16,-0.1,0.1)
#Create a function to search for change point
#and fit final change point model
cp.search_and_fit<-function(patid, t1, y, cps,ses,gender,age){
#Place to store likelihoods from the CP search
ll<-data.frame(changepoint=rep(NA,length(cps)), ll=rep(NA,length(cps)))
#Search for the CP
for (i in 1:length(cps)){cp<-cps[i]
t2<-ifelse(t1>cp, t1-cp, 0)
cp.model<-lme(y~t1+t2 + gender + ses + age, random=~1|patid, method='ML')
ll[i,]<-c(cp,logLik(cp.model))
}
#Plot the likelihood
plot(ll$changepoint, ll$ll, type='l', xlab='Change Point (years)', ylab='Log Likelihood')
#Find the max
cp<-ll[which(ll$ll==max(ll$ll)),'changepoint']
print(cp)
#Fit the final model
t2<-ifelse(t1>cp, t1-cp, 0)
cp.model<-lme(y~t1+t2+ gender + ses + age, random=~1|patid)
return(list(cp=cp, model=cp.model))}
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
library(ggplot2)
library(nlme)
#import data
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
#get the difference between age and age of onset
ment$ageDiff <- ment$age-ment$ageonset
mentDem <- ment[ment$demind == 1,]
animal <- mentDem[!is.na(mentDem$animals),]
keep <- names(which(table(animal$id)>=3))
animal <- animal[animal$id %in% keep,]
ggplot(data = animal, aes(x = ageDiff, y = animals, group = id)) +
geom_line() +
theme_bw() +
scale_x_continuous(name = "Year before Dx") +
scale_y_continuous(name = "Animal Score") +
labs(title = "Graph 1: Animal Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
geom_vline(xintercept = 0, color = "red")
###Following camille's example-Animals
#Data
patid<-as.character(animal$id)
t1<-animal$ageDiff
y<-animal$animals
ses <- animal$SES
gender <- as.factor(animal$gender)
age <- animal$age
#Sequence of change points to consider
cps<-seq(-12,-0.1,0.1)
#Create a function to search for change point
#and fit final change point model
cp.search_and_fit<-function(patid, t1, y, cps,ses,gender,age){
#Place to store likelihoods from the CP search
ll<-data.frame(changepoint=rep(NA,length(cps)), ll=rep(NA,length(cps)))
#Search for the CP
for (i in 1:length(cps)){cp<-cps[i]
t2<-ifelse(t1>cp, t1-cp, 0)
cp.model<-lme(y~t1+t2 + gender + ses + age, random=~1|patid, method='ML')
ll[i,]<-c(cp,logLik(cp.model))
}
#Plot the likelihood
plot(ll$changepoint, ll$ll, type='l', xlab='Change Point (years)', ylab='Log Likelihood')
#Find the max
cp<-ll[which(ll$ll==max(ll$ll)),'changepoint']
print(cp)
#Fit the final model
t2<-ifelse(t1>cp, t1-cp, 0)
cp.model<-lme(y~t1+t2+ gender + ses + age, random=~1|patid)
return(list(cp=cp, model=cp.model))}
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
summary(cp.model$model)
library(ggplot2)
library(nlme)
#import data
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
#get the difference between age and age of onset
ment$ageDiff <- ment$age-ment$ageonset
mentDem <- ment[ment$demind == 1,]
#make graph that is in the paper, for block ID
blockR <- mentDem[!is.na(mentDem$blockR),]
keep <- names(which(table(blockR$id)>=3))
blockR <- blockR[blockR$id %in% keep,]
ggplot(data = blockR, aes(x = ageDiff, y = blockR, group = id)) +
geom_line() +
theme_bw() +
scale_x_continuous(name = "Year before Dx") +
scale_y_continuous(name = "Block R Score") +
labs(title = "Graph 1: Block R Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
geom_vline(xintercept = 0, color = "red")
###Following camille's example-BlockR
#Data
patid<-as.character(blockR$id)
t1<-blockR$ageDiff
y<-blockR$blockR
ses <- blockR$SES
gender <- as.factor(blockR$gender)
age <- blockR$age
#Sequence of change points to consider
cps<-seq(-15,0,0.1)
#Create a function to search for change point
#and fit final change point model
cp.search_and_fit<-function(patid, t1, y, cps,ses,gender,age){
#Place to store likelihoods from the CP search
ll<-data.frame(changepoint=rep(NA,length(cps)), ll=rep(NA,length(cps)))
#Search for the CP
for (i in 1:length(cps)){cp<-cps[i]
t2<-ifelse(t1>cp, t1-cp, 0)
cp.model<-lme(y~t1+t2 + gender + ses + age, random=~1|patid, method='ML')
ll[i,]<-c(cp,logLik(cp.model))
}
#Plot the likelihood
plot(ll$changepoint, ll$ll, type='l', xlab='Change Point (years)', ylab='Log Likelihood')
#Find the max
cp<-ll[which(ll$ll==max(ll$ll)),'changepoint']
print(cp)
#Fit the final model
t2<-ifelse(t1>cp, t1-cp, 0)
cp.model<-lme(y~t1+t2+ gender + ses + age, random=~1|patid)
return(list(cp=cp, model=cp.model))}
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
summary(cp.model$model)
library(ggplot2)
library(nlme)
#import data
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
#get the difference between age and age of onset
ment$ageDiff <- ment$age-ment$ageonset
mentDem <- ment[ment$demind == 1,]
LogI <- mentDem[!is.na(mentDem$logmemI),]
keep <- names(which(table(LogI$id)>=3))
LogI <- LogI[LogI$id %in% keep,]
patid<-as.character(LogI$id)
t1<-LogI$ageDiff
y<-LogI$logmemI
ses <- LogI$SES
gender <- as.factor(LogI$gender)
age <- LogI$age
cps<-seq(-16,-0.1,0.1)
#Create a function to search for change point
#and fit final change point model
cp.search_and_fit<-function(patid, t1, y, cps,ses,gender,age){
#Place to store likelihoods from the CP search
ll<-data.frame(changepoint=rep(NA,length(cps)), ll=rep(NA,length(cps)))
#Search for the CP
for (i in 1:length(cps)){cp<-cps[i]
t2<-ifelse(t1>cp, t1-cp, 0)
cp.model<-lme(y~t1+t2 + gender + ses + age, random=~1|patid, method='ML')
ll[i,]<-c(cp,logLik(cp.model))
}
#Plot the likelihood
plot(ll$changepoint, ll$ll, type='l', xlab='Change Point (years)', ylab='Log Likelihood')
#Find the max
cp<-ll[which(ll$ll==max(ll$ll)),'changepoint']
print(cp)
#Fit the final model
t2<-ifelse(t1>cp, t1-cp, 0)
cp.model<-lme(y~t1+t2+ gender + ses + age, random=~1|patid)
return(list(cp=cp, model=cp.model))}
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
summary(cp.model$model)
patid<-as.character(LogI$id)
t1<-LogI$ageDiff
y<-LogI$logmemI
ses <- LogI$SES
gender <- as.factor(LogI$gender)
age <- LogI$age
#Sequence of change points to consider
cps<-seq(-14,-0.1,0.1)
#Create a function to search for change point
#and fit final change point model
cp.search_and_fit<-function(patid, t1, y, cps,ses,gender,age){
#Place to store likelihoods from the CP search
ll<-data.frame(changepoint=rep(NA,length(cps)), ll=rep(NA,length(cps)))
#Search for the CP
for (i in 1:length(cps)){cp<-cps[i]
t2<-ifelse(t1>cp, t1-cp, 0)
cp.model<-lme(y~t1+t2 + gender + ses + age, random=~1|patid, method='ML')
ll[i,]<-c(cp,logLik(cp.model))
}
#Plot the likelihood
plot(ll$changepoint, ll$ll, type='l', xlab='Change Point (years)', ylab='Log Likelihood')
#Find the max
cp<-ll[which(ll$ll==max(ll$ll)),'changepoint']
print(cp)
#Fit the final model
t2<-ifelse(t1>cp, t1-cp, 0)
cp.model<-lme(y~t1+t2+ gender + ses + age, random=~1|patid)
return(list(cp=cp, model=cp.model))}
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
summary(cp.model$model)
patid<-as.character(LogI$id)
t1<-LogI$ageDiff
y<-LogI$logmemI
ses <- LogI$SES
gender <- as.factor(LogI$gender)
age <- LogI$age
#Sequence of change points to consider
cps<-seq(-14,-0.1,0.1)
#Create a function to search for change point
#and fit final change point model
cp.search_and_fit<-function(patid, t1, y, cps,ses,gender,age){
#Place to store likelihoods from the CP search
ll<-data.frame(changepoint=rep(NA,length(cps)), ll=rep(NA,length(cps)))
#Search for the CP
for (i in 1:length(cps)){cp<-cps[i]
t2<-ifelse(t1>cp, t1-cp, 0)
cp.model<-lme(y~t1+t2 + gender + ses + age, random=~1|patid, method='ML')
ll[i,]<-c(cp,logLik(cp.model))
}
#Plot the likelihood
plot(ll$changepoint, ll$ll, type='l', xlab='Change Point (years)', ylab='Log Likelihood')
#Find the max
cp<-ll[which(ll$ll==max(ll$ll)),'changepoint']
print(cp)
#Fit the final model
t2<-ifelse(t1>cp, t1-cp, 0)
cp.model<-lme(y~t1+t2+ gender + ses + age, random=~1|patid)
return(list(cp=cp, model=cp.model))}
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
summary(cp.model$model)
###############################################
# BIOS 6623: Project 3                        #
# Date: 11/7/17                               #
# Purpose: Identify change point and model it #
#          for blockR                         #
###############################################
#library
library(ggplot2)
library(nlme)
#import data
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
#get the difference between age and age of onset
ment$ageDiff <- ment$age-ment$ageonset
mentDem <- ment[ment$demind == 1,]
#make graph that is in the paper, for block ID
blockR <- mentDem[!is.na(mentDem$blockR),]
keep <- names(which(table(blockR$id)>=3))
blockR <- blockR[blockR$id %in% keep,]
ggplot(data = blockR, aes(x = ageDiff, y = blockR, group = id)) +
geom_line() +
theme_bw() +
scale_x_continuous(name = "Year before Dx") +
scale_y_continuous(name = "Block R Score") +
labs(title = "Graph 1: Block R Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
geom_vline(xintercept = 0, color = "red")
###Following camille's example-BlockR
#Data
patid<-as.character(blockR$id)
t1<-blockR$ageDiff
y<-blockR$blockR
ses <- blockR$SES
gender <- as.factor(blockR$gender)
age <- blockR$age
#Sequence of change points to consider
cps<-seq(-15,0,0.1)
#Create a function to search for change point
#and fit final change point model
cp.search_and_fit<-function(patid, t1, y, cps,ses,gender,age){
#Place to store likelihoods from the CP search
ll<-data.frame(changepoint=rep(NA,length(cps)), ll=rep(NA,length(cps)))
#Search for the CP
for (i in 1:length(cps)){cp<-cps[i]
t2<-ifelse(t1>cp, t1-cp, 0)
cp.model<-lme(y~t1+t2 + gender + ses + age, random=~1|patid, method='ML')
ll[i,]<-c(cp,logLik(cp.model))
}
#Plot the likelihood
plot(ll$changepoint, ll$ll, type='l', xlab='Change Point (years)', ylab='Log Likelihood')
#Find the max
cp<-ll[which(ll$ll==max(ll$ll)),'changepoint']
print(cp)
#Fit the final model
t2<-ifelse(t1>cp, t1-cp, 0)
cp.model<-lme(y~t1+t2+ gender + ses + age, random=~1|patid)
return(list(cp=cp, model=cp.model))}
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
summary(cp.model$model)
library(ggplot2)
library(nlme)
#import data
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
#get the difference between age and age of onset
ment$ageDiff <- ment$age-ment$ageonset
mentDem <- ment[ment$demind == 1,]
animal <- mentDem[!is.na(mentDem$animals),]
keep <- names(which(table(animal$id)>=3))
animal <- animal[animal$id %in% keep,]
ggplot(data = animal, aes(x = ageDiff, y = animals, group = id)) +
geom_line() +
theme_bw() +
scale_x_continuous(name = "Year before Dx") +
scale_y_continuous(name = "Animal Score") +
labs(title = "Graph 1: Animal Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
geom_vline(xintercept = 0, color = "red")
###Following camille's example-Animals
#Data
patid<-as.character(animal$id)
t1<-animal$ageDiff
y<-animal$animals
ses <- animal$SES
gender <- as.factor(animal$gender)
age <- animal$age
#Sequence of change points to consider
cps<-seq(-12,-0.1,0.1)
#Create a function to search for change point
#and fit final change point model
cp.search_and_fit<-function(patid, t1, y, cps,ses,gender,age){
#Place to store likelihoods from the CP search
ll<-data.frame(changepoint=rep(NA,length(cps)), ll=rep(NA,length(cps)))
#Search for the CP
for (i in 1:length(cps)){cp<-cps[i]
t2<-ifelse(t1>cp, t1-cp, 0)
cp.model<-lme(y~t1+t2 + gender + ses + age, random=~1|patid, method='ML')
ll[i,]<-c(cp,logLik(cp.model))
}
#Plot the likelihood
plot(ll$changepoint, ll$ll, type='l', xlab='Change Point (years)', ylab='Log Likelihood')
#Find the max
cp<-ll[which(ll$ll==max(ll$ll)),'changepoint']
print(cp)
#Fit the final model
t2<-ifelse(t1>cp, t1-cp, 0)
cp.model<-lme(y~t1+t2+ gender + ses + age, random=~1|patid)
return(list(cp=cp, model=cp.model))}
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
summary(cp.model$model)
library(ggplot2)
library(nlme)
#import data
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
#get the difference between age and age of onset
ment$ageDiff <- ment$age-ment$ageonset
mentDem <- ment[ment$demind == 1,]
LogI <- mentDem[!is.na(mentDem$logmemI),]
keep <- names(which(table(LogI$id)>=3))
LogI <- LogI[LogI$id %in% keep,]
ggplot(data = LogI , aes(x = ageDiff, y = logmemI, group = id)) +
geom_line() +
theme_bw() +
scale_x_continuous(name = "Year before Dx") +
scale_y_continuous(name = "LogMEMI score") +
labs(title = "Graph 1: LogMEMI score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
geom_vline(xintercept = 0, color = "red")
###Following camille's example-Animals
#Data
patid<-as.character(LogI$id)
t1<-LogI$ageDiff
y<-LogI$logmemI
ses <- LogI$SES
gender <- as.factor(LogI$gender)
age <- LogI$age
#Sequence of change points to consider
cps<-seq(-14,-0.1,0.1)
#Create a function to search for change point
#and fit final change point model
cp.search_and_fit<-function(patid, t1, y, cps,ses,gender,age){
#Place to store likelihoods from the CP search
ll<-data.frame(changepoint=rep(NA,length(cps)), ll=rep(NA,length(cps)))
#Search for the CP
for (i in 1:length(cps)){cp<-cps[i]
t2<-ifelse(t1>cp, t1-cp, 0)
cp.model<-lme(y~t1+t2 + gender + ses + age, random=~1|patid, method='ML')
ll[i,]<-c(cp,logLik(cp.model))
}
#Plot the likelihood
plot(ll$changepoint, ll$ll, type='l', xlab='Change Point (years)', ylab='Log Likelihood')
#Find the max
cp<-ll[which(ll$ll==max(ll$ll)),'changepoint']
print(cp)
#Fit the final model
t2<-ifelse(t1>cp, t1-cp, 0)
cp.model<-lme(y~t1+t2+ gender + ses + age, random=~1|patid)
return(list(cp=cp, model=cp.model))}
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
summary(cp.model$model)
#library
library(ggplot2)
library(nlme)
#import data
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
#get the difference between age and age of onset
ment$ageDiff <- ment$age-ment$ageonset
mentDem <- ment[ment$demind == 1,]
LogII <- mentDem[!is.na(mentDem$logmemII),]
keep <- names(which(table(LogII$id)>=3))
LogII  <- LogII[LogII$id %in% keep,]
ggplot(data = LogI , aes(x = ageDiff, y = logmemII, group = id)) +
geom_line() +
theme_bw() +
scale_x_continuous(name = "Year before Dx") +
scale_y_continuous(name = "LogMEMII score") +
labs(title = "Graph 1: LogMEMII score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
geom_vline(xintercept = 0, color = "red")
LogII <- mentDem[!is.na(mentDem$logmemII),]
keep <- names(which(table(LogII$id)>=3))
LogII  <- LogII[LogII$id %in% keep,]
ggplot(data = LogI , aes(x = ageDiff, y = logmemII, group = id)) +
geom_line() +
theme_bw() +
scale_x_continuous(name = "Year before Dx") +
scale_y_continuous(name = "LogMEMII score") +
labs(title = "Graph 1: LogMEMII score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
geom_vline(xintercept = 0, color = "red")
patid<-as.character(LogII$id)
t1<-LogII$ageDiff
y<-LogII$logmemII
ses <- LogII$SES
gender <- as.factor(LogII$gender)
age <- LogII$age
#Sequence of change points to consider
cps<-seq(-15,-0.1,0.1)
#Create a function to search for change point
#and fit final change point model
cp.search_and_fit<-function(patid, t1, y, cps,ses,gender,age){
#Place to store likelihoods from the CP search
ll<-data.frame(changepoint=rep(NA,length(cps)), ll=rep(NA,length(cps)))
#Search for the CP
for (i in 1:length(cps)){cp<-cps[i]
t2<-ifelse(t1>cp, t1-cp, 0)
cp.model<-lme(y~t1+t2 + gender + ses + age, random=~1|patid, method='ML')
ll[i,]<-c(cp,logLik(cp.model))
}
#Plot the likelihood
plot(ll$changepoint, ll$ll, type='l', xlab='Change Point (years)', ylab='Log Likelihood')
#Find the max
cp<-ll[which(ll$ll==max(ll$ll)),'changepoint']
print(cp)
#Fit the final model
t2<-ifelse(t1>cp, t1-cp, 0)
cp.model<-lme(y~t1+t2+ gender + ses + age, random=~1|patid)
return(list(cp=cp, model=cp.model))}
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
summary(cp.model$model)
library(ggplot2)
#import data
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
ment$demind <- factor(ment$demind)
#Subset into complete for each
mentLogI <- ment[!is.na(ment$logmemI),]
mentLogII <- ment[!is.na(ment$logmemII),]
animal <- ment[!is.na(ment$animals),]
blockR <- ment[!is.na(ment$blockR),]
#delete those who don't have three measurement
keep <- names(which(table(mentLogI$id)>=3))
mentLogI <- mentLogI[mentLogI$id %in% keep,]
keep <- names(which(table(mentLogII$id)>=3))
mentLogII <- mentLogII[mentLogII$id %in% keep,]
keep <- names(which(table(animal$id)>=3))
animal <- animal[animal$id %in% keep,]
keep <- names(which(table(blockR$id)>=3))
blockR <- blockR[blockR$id %in% keep,]
library(ggplot2)
#import data
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
ment$demind <- factor(ment$demind)
#Subset into complete for each
mentLogI <- ment[!is.na(ment$logmemI),]
mentLogII <- ment[!is.na(ment$logmemII),]
animal <- ment[!is.na(ment$animals),]
blockR <- ment[!is.na(ment$blockR),]
#delete those who don't have three measurement
keep <- names(which(table(mentLogI$id)>=3))
mentLogI <- mentLogI[mentLogI$id %in% keep,]
keep <- names(which(table(mentLogII$id)>=3))
mentLogII <- mentLogII[mentLogII$id %in% keep,]
keep <- names(which(table(animal$id)>=3))
animal <- animal[animal$id %in% keep,]
keep <- names(which(table(blockR$id)>=3))
blockR <- blockR[blockR$id %in% keep,]
write.csv(animal, "C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Animal.csv")
write.csv(blockR, "C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Block.csv")
write.csv(mentLogI, "C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_LogI.csv")
write.csv(mentLogII, "C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_LogII.csv")
View(animal)
