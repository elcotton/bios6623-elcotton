cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
summary(cp.model$model)
patid<-as.character(blockR$id)
t1<-blockR$age-59
ageDiff <- ifelse(is.na(blockR$ageDiff),0,blockR$ageDiff)
y<-blockR$blockR
ses <- blockR$SES
gender <- as.factor(blockR$gender)
demind <- blockR$demind
#Sequence of change points to consider
cps<-seq(-9,-4,0.1)
#Create a function to search for change point
#and fit final change point model
cp.search_and_fit<-function(patid, t1, y, cps,ses,gender,age){
#Place to store likelihoods from the CP search
ll<-data.frame(changepoint=rep(NA,length(cps)), ll=rep(NA,length(cps)))
#Search for the CP
for (i in 1:length(cps)){
cp<-cps[i]
t2<-sapply(ageDiff, function(x) max(0,x+cp))
cp.model<-lmer(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid, method='ML')
ll[i,]<-c(cp,logLik(cp.model))
}
#Plot the likelihood
plot(ll$changepoint, ll$ll, type='l', xlab='Change Point (years)', ylab='Log Likelihood')
#Find the max
cp<-ll[which(ll$ll==max(ll$ll)),'changepoint']
print(cp)
#Fit the final model
t2<-sapply(ageDiff, function(x) max(0,x+cp))
cp.model<-lmer(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid)
return(list(cp=cp, model=cp.model))}
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
summary(cp.model$model)
library(lme4)
patid<-as.character(blockR$id)
t1<-blockR$age-59
ageDiff <- ifelse(is.na(blockR$ageDiff),0,blockR$ageDiff)
y<-blockR$blockR
ses <- blockR$SES
gender <- as.factor(blockR$gender)
demind <- blockR$demind
#Sequence of change points to consider
cps<-seq(-9,-4,0.1)
#Create a function to search for change point
#and fit final change point model
cp.search_and_fit<-function(patid, t1, y, cps,ses,gender,age){
#Place to store likelihoods from the CP search
ll<-data.frame(changepoint=rep(NA,length(cps)), ll=rep(NA,length(cps)))
#Search for the CP
for (i in 1:length(cps)){
cp<-cps[i]
t2<-sapply(ageDiff, function(x) max(0,x+cp))
cp.model<-lmer(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid, method='ML')
ll[i,]<-c(cp,logLik(cp.model))
}
#Plot the likelihood
plot(ll$changepoint, ll$ll, type='l', xlab='Change Point (years)', ylab='Log Likelihood')
#Find the max
cp<-ll[which(ll$ll==max(ll$ll)),'changepoint']
print(cp)
#Fit the final model
t2<-sapply(ageDiff, function(x) max(0,x+cp))
cp.model<-lmer(y~t1+t2 + gender + ses + demind + demind*t1, random=~1|patid)
return(list(cp=cp, model=cp.model))}
#Run the function on the dataset
cp.model <-cp.search_and_fit(patid, t1, y, cps, ses,gender,age)
summary(cp.model$model)
?lme
library(lme4)
?lme
poo <- c(1,2,3)
#import the data
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
#Get only the first measurement on each person
ment <- ment[!duplicated(ment$id),]
table(ment$id)
#import the data
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data.csv")
length(table(ment$id))
mean(table(ment$id))
table(ment$id)
summary(table(ment$id))
mean(table(ment$id))
sum(table(ment$id))
3385/216
#Delete those who have less than three measurements
keep <- names(which(table(ment$id)>=3))
ment <- ment[ment$id %in% keep,]
length(table(ment$id))
library(ggplot2)
#import data
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
ment$demind <- factor(ment$demind)
#Subset into complete for each
mentLogI <- ment[!is.na(ment$logmemI),]
mentLogII <- ment[!is.na(ment$logmemII),]
animal <- ment[!is.na(ment$animals),]
blockR <- ment[!is.na(ment$blockR),]
table(animal$id)
View(ment)
keep <- names(which(table(mentLogI$id)>=3))
mentLog <- mentLog[mentLog$id %in% keep,]
#Delete anyone who has less than 3 measurements for each
keep <- names(which(table(mentLogI$id)>=3))
mentLogI <- mentLogI[mentLogI$id %in% keep,]
table(mentLogI$id)
length(table(mentLogI$id))
#import the data
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data.csv")
View(ment)
colnames(ment)
sum(is.na(ment[,c(6:9)]))
test <- ment[!is.na(ment[,c(6:9)])]
test <- ment[rowSums(is.na(ment[,c(6:9)]) == 4),]
ment$numNA <- NA
#Delete any rows that did not have a single outcome
for(i in 1:nrow(ment)){
ment$numNA[i] <- sum(is.na(ment[i,c(6:9)]))
}
table(ment$numNA)
test <- ment[ment$numNA == 4,]
View(test)
#import the data
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data.csv")
ment$numNA <- NA
#Delete any rows that did not have a single outcome
for(i in 1:nrow(ment)){
ment$numNA[i] <- sum(is.na(ment[i,c(6:9)]))
}
qiUC <- qiUC[!(qiUC$numNA == 52),]
table(ment$numNA)
ment <- ment[ment$numNA != 4,]
length(ment$id)
length(table(ment$id))
#Delete those who have less than three measurements
keep <- names(which(table(ment$id)>=3))
ment <- ment[ment$id %in% keep,]
length(table(ment$id))
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data.csv")
# ment$numNA <- NA
# #Delete any rows that did not have a single outcome
# for(i in 1:nrow(ment)){
#   ment$numNA[i] <- sum(is.na(ment[i,c(6:9)]))
# }
#
# ment <- ment[ment$numNA != 4,]
#Delete those who have less than three measurements
keep <- names(which(table(ment$id)>=3))
ment <- ment[ment$id %in% keep,]
#save the data
write.csv(ment, "C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
length(table(ment$id))
library(ggplot2)
#import data
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
ment$demind <- factor(ment$demind)
#Subset into complete for each
mentLogI <- ment[!is.na(ment$logmemI),]
mentLogII <- ment[!is.na(ment$logmemII),]
animal <- ment[!is.na(ment$animals),]
blockR <- ment[!is.na(ment$blockR),]
#Delete anyone who has less than 3 measurements for each
keep <- names(which(table(mentLogI$id)>=3))
mentLogI <- mentLogI[mentLogI$id %in% keep,]
#delete those who don't have three measurement
keep <- names(which(table(mentLogI$id)>=3))
mentLogI <- mentLogI[mentLogI$id %in% keep,]
keep <- names(which(table(mentLogII$id)>=3))
mentLogII <- mentLogII[mentLogII$id %in% keep,]
keep <- names(which(table(animal$id)>=3))
animal <- animal[animal$id %in% keep,]
keep <- names(which(table(blockR$id)>=3))
blockR <- blockR[blockR$id %in% keep,]
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
ment$demind <- factor(ment$demind)
#Subset into complete for each
mentLogI <- ment[!is.na(ment$logmemI),]
mentLogII <- ment[!is.na(ment$logmemII),]
animal <- ment[!is.na(ment$animals),]
blockR <- ment[!is.na(ment$blockR),]
#Delete anyone who has less than 3 measurements for each
keep <- names(which(table(mentLogI$id)>=3))
mentLogI <- mentLogI[mentLogI$id %in% keep,]
#delete those who don't have three measurement
keep <- names(which(table(mentLogI$id)>=3))
mentLogI <- mentLogI[mentLogI$id %in% keep,]
keep <- names(which(table(mentLogII$id)>=3))
mentLogII <- mentLogII[mentLogII$id %in% keep,]
keep <- names(which(table(animal$id)>=3))
animal <- animal[animal$id %in% keep,]
keep <- names(which(table(blockR$id)>=3))
blockR <- blockR[blockR$id %in% keep,]
write.csv(animal, "C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Animal.csv")
write.csv(blockR, "C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Block.csv")
write.csv(mentLogI, "C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_LogI.csv")
write.csv(mentLogII, "C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_LogII.csv")
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
ment$demind <- factor(ment$demind)
#Subset into complete for each
mentLogI <- ment[!is.na(ment$logmemI),]
mentLogII <- ment[!is.na(ment$logmemII),]
animal <- ment[!is.na(ment$animals),]
blockR <- ment[!is.na(ment$blockR),]
#Delete anyone who has less than 3 measurements for each
keep <- names(which(table(mentLogI$id)>=3))
mentLogI <- mentLogI[mentLogI$id %in% keep,]
#delete those who don't have three measurement
keep <- names(which(table(mentLogI$id)>=3))
mentLogI <- mentLogI[mentLogI$id %in% keep,]
keep <- names(which(table(mentLogII$id)>=3))
mentLogII <- mentLogII[mentLogII$id %in% keep,]
keep <- names(which(table(animal$id)>=3))
animal <- animal[animal$id %in% keep,]
keep <- names(which(table(blockR$id)>=3))
blockR <- blockR[blockR$id %in% keep,]
write.csv(animal, "C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Animal.csv")
write.csv(blockR, "C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Block.csv")
write.csv(mentLogI, "C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_LogI.csv")
write.csv(mentLogII, "C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_LogII.csv")
length(table(animal$id))
length(table(blockR$id))
length(table(mentLogI$id))
length(table(mentLogII$id))
#import the data
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data.csv")
#Delete those who have less than three measurements
keep <- names(which(table(ment$id)>=3))
ment <- ment[ment$id %in% keep,]
length(table(ment$id))
#import the data
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data.csv")
#save the data
write.csv(ment, "C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
#import the data
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
#Get only the first measurement on each person
ment <- ment[!duplicated(ment$id),]
#Make mini datasets
mentDem <- ment[ment$demind == 1,]
mentNoDem <- ment[ment$demind == 0,]
#Make tableOne: Demographics
tableOne <- matrix(NA, ncol = 4, nrow = 7)
colnames(tableOne) <- c("Variable", "All Patients", "Dementia Diagnosis", "No Dementia Diagnosis")
tableOne[,1] <- c("N", "Sex (n (%))", "Male", "Female", "SES (mean ± sd)",
"Age (mean ± sd)", "Age at onset (mean ± sd)")
contFunc <- function(x){
return(paste(round(mean(x, na.rm = TRUE),2), "±", round(sd(x, na.rm = TRUE),2), "(Missing =", sum(is.na(x)), ")"))
}
tableOne[1,2] <- nrow(ment)
tableOne[1,3] <- nrow(mentDem)
tableOne[1,4] <- nrow(mentNoDem)
tableOne[3:4,2] <- paste(round(prop.table(table(ment$gender))[c(1,2)]*100,2), "(",table(ment$gender)[c(1,2)],")")
tableOne[3:4,3] <- paste(round(prop.table(table(mentDem$gender))[c(1,2)]*100,2), "(",table(mentDem$gender)[c(1,2)],")")
tableOne[3:4,4] <- paste(round(prop.table(table(mentNoDem$gender))[c(1,2)]*100,2), "(",table(mentNoDem$gender)[c(1,2)],")")
tableOne[5,2] <- contFunc(ment$SES)
tableOne[5,3] <- contFunc(mentDem$SES)
tableOne[5,4] <- contFunc(mentNoDem$SES)
tableOne[6,2] <- contFunc(ment$age)
tableOne[6,3] <- contFunc(mentDem$age)
tableOne[6,4] <- contFunc(mentNoDem$age)
tableOne[7,2] <- contFunc(ment$ageonset)
tableOne[7,3] <- contFunc(mentDem$ageonset)
tableOne[7,4] <- contFunc(mentNoDem$ageonset)
write.csv(tableOne, "C:/Repositories/bios6623-elcotton/Project3/Reports/tableOne.csv")
#make TableTwo: Outcome variables
tableTwo <- matrix(NA, nrow = 5, ncol = 4)
colnames(tableTwo) <- c("Variable", "All Patients", "Dementia Diagnosis", "No Dementia Diagnosis")
tableTwo[,1] <- c("Baseline Values", "Block Design Test Score",
"Category Fluency for Animals Score",
"Logical Memory I Story A Score",
"Logical Memory II Story A Score")
tableTwo[2,2] <- contFunc(ment$blockR)
tableTwo[2,3] <- contFunc(mentDem$blockR)
tableTwo[2,4] <- contFunc(mentNoDem$blockR)
tableTwo[3,2] <- contFunc(ment$animals)
tableTwo[3,3] <- contFunc(mentDem$animals)
tableTwo[3,4] <- contFunc(mentNoDem$animals)
tableTwo[4,2] <- contFunc(ment$logmemI)
tableTwo[4,3] <- contFunc(mentDem$logmemI)
tableTwo[4,4] <- contFunc(mentNoDem$logmemI)
tableTwo[5,2] <- contFunc(ment$logmemII)
tableTwo[5,3] <- contFunc(mentDem$logmemII)
tableTwo[5,4] <- contFunc(mentNoDem$logmemII)
write.csv(tableTwo, "C:/Repositories/bios6623-elcotton/Project3/Reports/tableTwo.csv")
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
ment$demind <- factor(ment$demind)
#Subset into complete for each
mentLogI <- ment[!is.na(ment$logmemI),]
mentLogII <- ment[!is.na(ment$logmemII),]
animal <- ment[!is.na(ment$animals),]
blockR <- ment[!is.na(ment$blockR),]
#Delete anyone who has less than 3 measurements for each
keep <- names(which(table(mentLogI$id)>=3))
mentLogI <- mentLogI[mentLogI$id %in% keep,]
#delete those who don't have three measurement
keep <- names(which(table(mentLogI$id)>=3))
mentLogI <- mentLogI[mentLogI$id %in% keep,]
keep <- names(which(table(mentLogII$id)>=3))
mentLogII <- mentLogII[mentLogII$id %in% keep,]
keep <- names(which(table(animal$id)>=3))
animal <- animal[animal$id %in% keep,]
keep <- names(which(table(blockR$id)>=3))
blockR <- blockR[blockR$id %in% keep,]
length(table(animal$id))
ggplot(data = mentLogI, aes(x = age, y = logmemI, group = id, color = demind)) +
geom_line() +
scale_color_manual(values=c("deepskyblue", "darkgoldenrod1"), name = "Dementia\nStatus",
labels = c("No", "Yes")) +
theme_bw() +
scale_x_continuous(name = "Age (Years)") +
scale_y_continuous(name = "Logical Memory I Story A score") +
labs(title = "Graph 1: Logical Memory I Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
theme(legend.title = element_text(face = "bold")) +
theme(legend.title.align=0.5)
#For the Wechsler Memory Scale Logical Memory II Story A;
#logmemII variable
ggplot(data = mentLogII, aes(x = age, y = logmemII, group = id, color = demind)) +
geom_line()+
scale_color_manual(values=c("deepskyblue", "darkgoldenrod1"), name = "Dementia\nStatus",
labels = c("No", "Yes")) +
theme_bw() +
scale_x_continuous(name = "Age (Years)") +
scale_y_continuous(name = "Logical Memory II Story A score") +
labs(title = "Graph 2: Logical Memory II Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
theme(legend.title = element_text(face = "bold")) +
theme(legend.title.align=0.5)
#For category fluency for animals;
#Animals variable
ggplot(data = animal, aes(x = age, y = animals, group = id, color = demind)) +
geom_line() +
scale_color_manual(values=c("deepskyblue", "darkgoldenrod1"), name = "Dementia\nStatus",
labels = c("No", "Yes")) +
theme_bw() +
scale_x_continuous(name = "Age (Years)") +
scale_y_continuous(name = "Category Fluency for Animals Score") +
labs(title = "Graph 3: Category Fluency Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
theme(legend.title = element_text(face = "bold")) +
theme(legend.title.align=0.5)
#For the Wechsler Adult Intelligence Scale-Revised Block Design
#BlockR
ggplot(data = blockR, aes(x = age, y = blockR, group = id, color = demind)) +
geom_line() +
scale_color_manual(values=c("deepskyblue", "darkgoldenrod1"), name = "Dementia\nStatus",
labels = c("No", "Yes")) +
theme_bw() +
scale_x_continuous(name = "Age (Years)") +
scale_y_continuous(name = "Block Design Test Score") +
labs(title = "Graph 4: Block Design Test Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
theme(legend.title = element_text(face = "bold")) +
theme(legend.title.align=0.5)
library(ggplot2)
library(nlme)
#import data
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
#get the difference between age and age of onset
ment$ageDiff <- ment$age-ment$ageonset
mentDem <- ment[ment$demind == 1,]
###Make graph that is in the paper, for block ID
animalsGraph <- mentDem[!is.na(mentDem$animals),]
keep <- names(which(table(animalsGraph$id)>=3))
animalsGraph <- animalsGraph[animalsGraph$id %in% keep,]
ggplot(data = animalsGraph, aes(x = ageDiff, y = animals, group = id)) +
geom_line() +
theme_bw() +
scale_x_continuous(name = "Year before Dx") +
scale_y_continuous(name = "Block R Score") +
labs(title = "Graph 1: Block R Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
geom_vline(xintercept = 0, color = "red")
ggplot(data = animalsGraph, aes(x = ageDiff, y = animals, group = id)) +
geom_line() +
theme_bw() +
scale_x_continuous(name = "Year before Dx") +
scale_y_continuous(name = "Block R Score") +
labs(title = "Block R Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
geom_vline(xintercept = 0, color = "red"
)
ggplot(data = animalsGraph, aes(x = ageDiff, y = animals, group = id)) +
geom_line() +
theme_bw() +
scale_x_continuous(name = "Year before Dx") +
scale_y_continuous(name = "Block R Score") +
labs(title = "Graph 8: Block R Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
geom_vline(xintercept = 0, color = "red")
###############################################
# BIOS 6623: Project 3                        #
# Date: 11/7/17                               #
# Purpose: Identify change point and model it #
#          for animals                        #
###############################################
#library
library(ggplot2)
library(nlme)
#import data
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
#get the difference between age and age of onset
ment$ageDiff <- ment$age-ment$ageonset
mentDem <- ment[ment$demind == 1,]
###Make graph that is in the paper, for block ID
animalsGraph <- mentDem[!is.na(mentDem$animals),]
keep <- names(which(table(animalsGraph$id)>=3))
animalsGraph <- animalsGraph[animalsGraph$id %in% keep,]
ggplot(data = animalsGraph, aes(x = ageDiff, y = animals, group = id)) +
geom_line() +
theme_bw() +
scale_x_continuous(name = "Year before Dx") +
scale_y_continuous(name = "Animal Score") +
labs(title = "Graph 7: Animal Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
geom_vline(xintercept = 0, color = "red")
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
#get the difference between age and age of onset
ment$ageDiff <- ment$age-ment$ageonset
mentDem <- ment[ment$demind == 1,]
###Make graph that is in the paper, for block ID
blockRgraph <- mentDem[!is.na(mentDem$blockR),]
keep <- names(which(table(blockRgraph$id)>=3))
blockRgraph <- blockRgraph[blockRgraph$id %in% keep,]
ggplot(data = blockRgraph, aes(x = ageDiff, y = blockR, group = id)) +
geom_line() +
theme_bw() +
scale_x_continuous(name = "Year before Dx") +
scale_y_continuous(name = "Block R Score") +
labs(title = "Graph 8: Block R Score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
geom_vline(xintercept = 0, color = "red")
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
#get the difference between age and age of onset
ment$ageDiff <- ment$age-ment$ageonset
mentDem <- ment[ment$demind == 1,]
LogIGraph <- mentDem[!is.na(mentDem$logmemI),]
keep <- names(which(table(LogIGraph$id)>=3))
LogIGraph <- LogIGraph[LogIGraph$id %in% keep,]
ggplot(data = LogIGraph , aes(x = ageDiff, y = logmemI, group = id)) +
geom_line() +
theme_bw() +
scale_x_continuous(name = "Year before Dx") +
scale_y_continuous(name = "LogMEMI score") +
labs(title = "Graph 1: LogMEMI score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
geom_vline(xintercept = 0, color = "red")
ggplot(data = LogIGraph , aes(x = ageDiff, y = logmemI, group = id)) +
geom_line() +
theme_bw() +
scale_x_continuous(name = "Year before Dx") +
scale_y_continuous(name = "LogMEMI score") +
labs(title = "Graph 5: LogMEMI score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
geom_vline(xintercept = 0, color = "red
")"
,
zxcv
sdflma
)
""
ggplot(data = LogIGraph , aes(x = ageDiff, y = logmemI, group = id)) +
geom_line() +
theme_bw() +
scale_x_continuous(name = "Year before Dx") +
scale_y_continuous(name = "LogMEMI score") +
labs(title = "Graph 5: LogMEMI score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
geom_vline(xintercept = 0, color = "red")
ment <- read.csv("C:/Users/cottonel/Documents/BIOS6623_AdvancedData/Project_Three/Project3Data_Cleaned.csv")
#get the difference between age and age of onset
ment$ageDiff <- ment$age-ment$ageonset
mentDem <- ment[ment$demind == 1,]
LogIIgraph <- mentDem[!is.na(mentDem$logmemII),]
keep <- names(which(table(LogIIgraph$id)>=3))
LogIIgraph  <- LogIIgraph[LogIIgraph$id %in% keep,]
ggplot(data = LogIIgraph , aes(x = ageDiff, y = logmemII, group = id)) +
geom_line() +
theme_bw() +
scale_x_continuous(name = "Year before Dx") +
scale_y_continuous(name = "LogMEMII score") +
labs(title = "Graph 6: LogMEMII score over time")+
theme(text = element_text(size=12)) +
theme(plot.title = element_text(size = rel(2), hjust = 0.5))+
theme(axis.title = element_text(face = "bold")) +
geom_vline(xintercept = 0, color = "red")
